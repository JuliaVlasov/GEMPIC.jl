var documenterSearchIndex = {"docs":
[{"location":"contents/#Contents","page":"Contents","title":"Contents","text":"","category":"section"},{"location":"contents/","page":"Contents","title":"Contents","text":"","category":"page"},{"location":"contents/#Index","page":"Contents","title":"Index","text":"","category":"section"},{"location":"contents/","page":"Contents","title":"Contents","text":"","category":"page"},{"location":"mesh/#Mesh","page":"Mesh","title":"Mesh","text":"","category":"section"},{"location":"mesh/","page":"Mesh","title":"Mesh","text":"Modules = [GEMPIC]\nPages   = [\"mesh.jl\"]","category":"page"},{"location":"mesh/#GEMPIC.OneDGrid","page":"Mesh","title":"GEMPIC.OneDGrid","text":"TwoDGrid( xmin, xmax, nx, ymin, ymax, ny )\n\nSimple structure to store mesh data from 2 dimensions\n\n\n\n\n\n","category":"type"},{"location":"mesh/#GEMPIC.TwoDGrid","page":"Mesh","title":"GEMPIC.TwoDGrid","text":"TwoDGrid( dimx, nx, dimy, ny)\n\nGenerate a cartesians mesh on rectangle dimxx dimy with nx x ny points\n\nnx : indices are in [1:nx]\nny : indices are in [1:ny]\ndimx = xmax - xmin\ndimy = ymax - ymin\nx, y : node positions\ndx, dy : step size\n\n\n\n\n\n","category":"type"},{"location":"mesh/#GEMPIC.get_cell_and_offset-Tuple{OneDGrid, Any}","page":"Mesh","title":"GEMPIC.get_cell_and_offset","text":"get_cell_and_offset( mesh, x )\n\nGet cell and offset\n\nWe compute the cell indices where the particle is and its relative  normalized position inside the cell\n\n\n\n\n\n","category":"method"},{"location":"mesh/#GEMPIC.get_x-Tuple{OneDGrid, Any}","page":"Mesh","title":"GEMPIC.get_x","text":"get_x( mesh, i )\n\nGet position\n\n\n\n\n\n","category":"method"},{"location":"distributions/#Distributions","page":"Distributions","title":"Distributions","text":"","category":"section"},{"location":"distributions/","page":"Distributions","title":"Distributions","text":"Modules = [GEMPIC]\nPages   = [\"distributions.jl\"]","category":"page"},{"location":"distributions/#GEMPIC.CosGaussianParams","page":"Distributions","title":"GEMPIC.CosGaussianParams","text":"CosGaussianParams( dims, k, α, σ, μ, δ )\n\nParameters of a distribution with is a product of a Cosine  distribution along x and a Normal distribution along v.\n\nn_gaussians : Number of Gaussians\nn_cos       : Number of cosines\nnormal      : Normalization constant of each Gaussian\n\n\n\n\n\n","category":"type"},{"location":"distributions/#GEMPIC.CosSumGaussian","page":"Distributions","title":"GEMPIC.CosSumGaussian","text":"CosSumGaussian{D,V}( n_cos, n_gaussians, k, α, σ, μ, δ )\n\nData type for parameters of initial distribution\n\n(1+ cos( sum^n_cos_i=1 k_i x)) \ncdot \nsum_j=1^n_gaussians \ndelta_j \nexp big( -frac12 \nfrac(v-mu_j)^2sigma_j^2 big)\n\nParameters\n\nk : values of the wave numbers (one array for each cosines)\nα : strength of perturbations\nσ : variance of the Gaussian (one velocity vector for each gaussian).\nμ : mean value of the Gaussian (one velocity vector for each gaussian).\nδ : portion of each Gaussian \n\nExample\n\nf(xv_1v_2)=frac12pisigma_1sigma_2 exp Big( - frac12\nbig( fracv_1^2sigma_1^2 + fracv_2^2sigma_2^2 big) \nBig) ( 1 + alpha cos(kx))\n\ndf = CosSumGaussian{1,2}([[k]],[α], [[σ₁,σ₂]], [[μ₁,μ₂]])\n\n\n\n\n\n","category":"type"},{"location":"distributions/#GEMPIC.SumCosGaussian","page":"Distributions","title":"GEMPIC.SumCosGaussian","text":"SumCosGaussian( dims, n_cos, n_gaussians, k, α, σ, μ, δ )\n\nData type for parameters of initial distribution\n\n(1+ sum_i=1^n_cos alpha_i cos(  k_i mathbfx))\ncdot\nsum_j=1^n_gaussians \ndelta_j exp \nbig( -frac12 \nfrac(mathbfv-mu_j)^2sigma_j^2 big)\n\nParameters\n\nk : values of the wave numbers (Array of vectors for multiple cosines)\nα : strength of perturbations\nσ : variance of the Gaussian ( Array of vectors for multiple Gaussians)\nμ : mean value of the Gaussian ( Array multiple Gaussians)\nnormal : Normalization constant of each Gaussian\nn_gaussians : Number of Gaussians\nn_cos : Number of cosines\nδ : portion of each Gaussian \n\nExample\n\nf(xv_1v_2) = frac12pisigma_1sigma_2 \nexp Big( - frac12 big( fracv_1^2sigma_1^2\n + fracv_2^2sigma_2^2 big) Big) \n( 1 + alpha_1 cos(k_1 x) + alpha_2 cos(k_2 x) )\n\ndf = SumCosGaussian{1,2}([[k₁],[k₂]], [α₁, α₂], [[σ₁,σ₂]], [[0.0,0.0]])\n\n\n\n\n\n\n","category":"type"},{"location":"distributions/#GEMPIC.eval_v_density-Tuple{GEMPIC.AbstractCosGaussian, Union{Float64, Vector{Float64}}}","page":"Distributions","title":"GEMPIC.eval_v_density","text":"eval_v_density( f, v )\n\nevaluate the normal part of the distribution function\n\n\n\n\n\n","category":"method"},{"location":"distributions/#GEMPIC.eval_x_density-Tuple{SumCosGaussian, Union{Float64, Vector{Float64}}}","page":"Distributions","title":"GEMPIC.eval_x_density","text":"eval_x_density( f, x )\n\nevaluate the cosine part of the distribution function\n\n\n\n\n\n","category":"method"},{"location":"distributions/#Spin-version","page":"Distributions","title":"Spin version","text":"","category":"section"},{"location":"distributions/","page":"Distributions","title":"Distributions","text":"Modules = [GEMPIC]\nPages   = [\"distributions_spin.jl\"]","category":"page"},{"location":"distributions/#GEMPIC.CosSumGaussianSpin","page":"Distributions","title":"GEMPIC.CosSumGaussianSpin","text":"SpinCosSumGaussian{D,V}( n_cos, n_gaussians, k, α, σ, μ, δ )\n\nData type for parameters of initial distribution\n\n(1+ cos( sum^n_cos_i=1 k_i x)) \ncdot \nsum_j=1^n_gaussians \ndelta_j \nexp big( -frac12 \nfrac(v-mu_j)^2sigma_j^2 big)\n\nParameters\n\nk : values of the wave numbers (one array for each cosines)\nα : strength of perturbations\nσ : variance of the Gaussian (one velocity vector for each gaussian).\nμ : mean value of the Gaussian (one velocity vector for each gaussian).\nδ : portion of each Gaussian \n\nExample\n\nf(xv_1v_2)=frac12pisigma_1sigma_2 exp Big( - frac12\nbig( fracv_1^2sigma_1^2 + fracv_2^2sigma_2^2 big) \nBig) ( 1 + alpha cos(kx))\n\ndf = CosSumGaussian{1,1,3}([[k]],[α], [[σ₁,σ₂]], [[μ₁,μ₂]])\n\n\n\n\n\n","category":"type"},{"location":"particle_mesh_coupling/#Particle-Mesh-coupling","page":"Particle-Mesh coupling","title":"Particle-Mesh coupling","text":"","category":"section"},{"location":"particle_mesh_coupling/","page":"Particle-Mesh coupling","title":"Particle-Mesh coupling","text":"Modules = [GEMPIC]\nPages   = [\"particle_mesh_coupling_1d.jl\", \"particle_mesh_coupling_2d.jl\"]","category":"page"},{"location":"particle_mesh_coupling/#GEMPIC.ParticleMeshCoupling1D","page":"Particle-Mesh coupling","title":"GEMPIC.ParticleMeshCoupling1D","text":"ParticleMeshCoupling1D( mesh, no_particles, spline_degree, \n                      smoothing_type )\n\nKernel smoother with splines of arbitrary degree placed on a uniform mesh. Spline with index i starts at point i\n\ndelta_x : Value of grid spacing along both directions.\nn_grid : Array containing number ofpoints along each direction\nno_particles : Number of particles of underlying PIC method \nspline_degree : Degree of smoothing kernel spline\nn_span : Number of intervals where spline non zero (spline_degree + 1)\nscaling : Scaling factor depending on whether :galerkin or :collocation\nn_quad_points : Number of quadrature points\nspline_val: scratch data for spline evaluation\nspline_val_more : more scratch data for spline evaluation\nquad_x, quad_w : quadrature weights and points\n\nnote: Note\nOnly 1D version is implemented for now\n\n\n\n\n\n","category":"type"},{"location":"particle_mesh_coupling/#GEMPIC.add_charge!-Tuple{Vector{Float64}, ParticleMeshCoupling1D, Float64, Float64}","page":"Particle-Mesh coupling","title":"GEMPIC.add_charge!","text":"add_charge!( rho, p, position, marker_charge)\n\nAdd charge of one particle\n\np             : kernel smoother object\nposition      : Position of the particle\nmarker_charge : Particle weights time charge\nrho_dofs      : Coefficient vector of the charge distribution\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.add_charge_pp!-Tuple{Vector{Float64}, ParticleMeshCoupling1D, Float64, Any}","page":"Particle-Mesh coupling","title":"GEMPIC.add_charge_pp!","text":"add_charge_pp!(rho_dofs, p, position, marker_charge)\n\nAdd charge of one particle\n\np             : kernel smoother object\nposition      : Position of the particle\nmarker_charge : Particle weights time charge\nrho_dofs      : Coefficient vector of the charge distribution\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.add_current_update_v!-Tuple{AbstractArray, ParticleMeshCoupling1D, Float64, Float64, Float64, Float64, Float64}","page":"Particle-Mesh coupling","title":"GEMPIC.add_current_update_v!","text":"add_current_update_v!( j_dofs, p, \n                       position_old, position_new, \n                       marker_charge, qoverm, vi)\n\nAdd current for one particle and update v (according to H_p1 part in Hamiltonian splitting)\n\nThis is the 1d1v case, there is no magnetic field.\n\nRead out particle position and velocity\nCompute index_old, the index of the last DoF on the grid the \n\nparticle contributes to, and r_old, its position (normalized to cell size one).\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.add_current_update_v!-Tuple{AbstractArray, ParticleMeshCoupling1D, Float64, Float64, Float64, Float64, Vector{Float64}, Float64}","page":"Particle-Mesh coupling","title":"GEMPIC.add_current_update_v!","text":"add_current_update_v!( j_dofs, p, \n                       position_old, position_new, \n                       marker_charge, qoverm, \n                       bfield_dofs, vi)\n\nAdd current for one particle and update v (according to H_p1 part in Hamiltonian splitting)\n\nRead out particle position and velocity\nCompute index_old, the index of the last DoF on the grid the \n\nparticle contributes to, and r_old, its position (normalized to cell size one).\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.add_current_update_v_pp!-Tuple{AbstractArray, ParticleMeshCoupling1D, Any, Any, Float64, Float64, Vector{Float64}, Vector{Float64}}","page":"Particle-Mesh coupling","title":"GEMPIC.add_current_update_v_pp!","text":"add_current_update_v_pp!( j_dofs, p, position_old, position_new, \n                          marker_charge, qoverm, bfield_dofs, vi)\n\nAdd current for one particle and update v  (according to H_p1 part in Hamiltonian splitting)\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.evaluate-Tuple{ParticleMeshCoupling1D, Float64, Vector{Float64}}","page":"Particle-Mesh coupling","title":"GEMPIC.evaluate","text":"evaluate(p, position, field_dofs)\n\nEvaluate field at position\n\np : Kernel smoother object \nposition : Position of the particle\nfield_dofs : Coefficient vector for the field DoFs\nfield_value : Value(s) of the electric fields at given position\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.evaluate_pp-Tuple{ParticleMeshCoupling1D, Float64, Matrix{Float64}}","page":"Particle-Mesh coupling","title":"GEMPIC.evaluate_pp","text":"evaluate_pp(p, position, field_dofs_pp)\n\nEvaluate field at position using horner scheme\n\np : Kernel smoother object \nposition : Position of the particle\nfield_dofs_pp : Degrees of freedom in kernel representation.\nfield_value : Value(s) of the electric fields at given position\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.update_jv!-Tuple{AbstractArray, ParticleMeshCoupling1D, Float64, Float64, Int64, Float64, Float64, Float64, Float64, Vector{Float64}}","page":"Particle-Mesh coupling","title":"GEMPIC.update_jv!","text":"update_jv!(j_dofs, p, \n           lower, upper, index, marker_charge, \n           qoverm, sign, vi, bfield_dofs)\n\nHelper function for add_current_update_v.\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.update_jv!-Tuple{AbstractArray, ParticleMeshCoupling1D, Float64, Float64, Int64, Float64, Float64, Float64, Float64}","page":"Particle-Mesh coupling","title":"GEMPIC.update_jv!","text":"update_jv!(j_dofs, p, \n           lower, upper, index, marker_charge, \n           qoverm, sign, vi)\n\nHelper function for add_current_update_v without the magnetic field (1d1v case)\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.update_jv_pp!-Tuple{AbstractArray, ParticleMeshCoupling1D, Float64, Float64, Int64, Float64, Float64, Float64, Vector{Float64}}","page":"Particle-Mesh coupling","title":"GEMPIC.update_jv_pp!","text":"update_jv_pp!( j_dofs, p, lower, upper, index, marker_charge, \n               qoverm, vi, bfield_dofs)\n\nHelper function for add_current_update_v.\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.ParticleMeshCoupling2D","page":"Particle-Mesh coupling","title":"GEMPIC.ParticleMeshCoupling2D","text":"ParticleMeshCoupling2D( pg, grid, degree, smoothing_type)\n\nn_grid(2) : no. of spline coefficients\ndomain(2,2) : lower and upper bounds of the domain\nno_particles : no. of particles\ndegree : Degree of smoothing kernel spline\nsmoothing_type : Define if Galerkin or collocation smoothing for right scaling in accumulation routines \n\n\n\n\n\n","category":"type"},{"location":"particle_mesh_coupling/#GEMPIC.add_charge!-Tuple{Any, ParticleMeshCoupling2D, Any, Any, Any}","page":"Particle-Mesh coupling","title":"GEMPIC.add_charge!","text":"add_charge!(ρ_dofs, pm, xp, yp, wp)\n\nAdd charge of single particle\n\nposition : Particle position\nwp : Particle weight times charge\nρ_dofs : spline coefficient of accumulated density\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.add_charge_pp!-Tuple{Any, ParticleMeshCoupling2D, Any, Any, Any}","page":"Particle-Mesh coupling","title":"GEMPIC.add_charge_pp!","text":"add_charge_pp!(ρ_dofs, pm, xp, yp, wp)\n\nAdd charge of single particle\n\nInformation about the 2d mesh\ndelta_x(2)  : Value of grid spacing along both directions.\ndomain(2,2) : Definition of the domain: domain(1,1) = x1min, domain(2,1) = x2min,  domain(1,2) = x1max, domain(2,2) = x2max\nInformation about the particles\nno_particles : Number of particles of underlying PIC method (processor local)\nn_span : Number of intervals where spline non zero (degree + 1)\nscaling\nposition : Particle position\nwp : Particle weight times charge\nρ_dofs : spline coefficient of accumulated density\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.compute_shape_factor-Tuple{ParticleMeshCoupling2D, Any, Any}","page":"Particle-Mesh coupling","title":"GEMPIC.compute_shape_factor","text":"compute_shape_factor(pm, xp, yp)\n\nHelper function computing shape factor\n\npm : kernel smoother object\nxp, xp : poisition of the particle\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.evaluate-NTuple{4, Any}","page":"Particle-Mesh coupling","title":"GEMPIC.evaluate","text":"evaluate(pm, xp, yp, field_dofs)\n\nposition(pm.dim) : Position where to evaluate\nfielddofs(pm.ndofs) : Degrees of freedom in kernel representation.\nfield_value : Value of the field\n\nEvaluate field with given dofs at position\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.evaluate_multiple-Tuple{Any, Any, Any}","page":"Particle-Mesh coupling","title":"GEMPIC.evaluate_multiple","text":"evaluate_multiple(pm, position, field_dofs)\n\nEvaluate multiple fields at position \u0007 position\n\nposition(pm%dim) : Position where to evaluate\ncomponents(:) : Components of the field that shall be evaluated\nfield_dofs(:,:) : Degrees of freedom in kernel representation.\nfield_value(:) : Value of the field\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.evaluate_pp-Tuple{ParticleMeshCoupling2D, Any, Any, Any}","page":"Particle-Mesh coupling","title":"GEMPIC.evaluate_pp","text":"evaluate_pp(pm, xp, yp, pp)\n\nEvaluate field at position using horner scheme\n\npm : kernel smoother object    \nposition : Position where to evaluate\nfielddofspp(:,:) : Degrees of freedom in kernel representation.\nfield_value : Value of the field\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.index_1dto2d_column_major-Tuple{Any, Any, Any}","page":"Particle-Mesh coupling","title":"GEMPIC.index_1dto2d_column_major","text":"index_1dto2d_column_major(pm, index1d_1, index_1d_2)\n\nSelf function computes the index of a 1D array that stores 2D data in column major ordering.  It also takes periodic boundary conditions into account.\n\nindex1d_1 !< indice along x (start counting with zero).\nindex1d_2 !< indice along y (start counting with zero).\nindex2d   !< Corresponding index in 1d array representing 2d data (start counting with one).\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#Spin-version","page":"Particle-Mesh coupling","title":"Spin version","text":"","category":"section"},{"location":"particle_mesh_coupling/","page":"Particle-Mesh coupling","title":"Particle-Mesh coupling","text":"Modules = [GEMPIC]\nPages   = [\"particle_mesh_coupling_spin.jl\"]","category":"page"},{"location":"particle_mesh_coupling/#GEMPIC.add_current_update_v!-Tuple{AbstractArray, ParticleMeshCoupling1D, Float64, Float64, Float64}","page":"Particle-Mesh coupling","title":"GEMPIC.add_current_update_v!","text":"add_current_update_v!( j_dofs, p, position_old, position_new, marker_charge)\n\nAdd current for one particle and update v (according to H_p1 part in Hamiltonian splitting)\n\nRead out particle position and velocity\nCompute index_old, the index of the last DoF on the grid the \n\nparticle contributes to, and r_old, its position (normalized to cell size one).\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.add_current_update_v_pp!-Tuple{AbstractArray, ParticleMeshCoupling1D, Float64, Float64, Float64}","page":"Particle-Mesh coupling","title":"GEMPIC.add_current_update_v_pp!","text":"add_current_update_v_pp!( j_dofs, p, position_old, position_new, \n                          marker_charge)\n\nAdd current for one particle and update v  (according to H_p1 part in Hamiltonian splitting)\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.update_jv!-Tuple{AbstractArray, ParticleMeshCoupling1D, Float64, Float64, Int64, Float64, Float64}","page":"Particle-Mesh coupling","title":"GEMPIC.update_jv!","text":"update_jv!(j_dofs, p, lower, upper, index, marker_charge, qoverm, sign)\n\nHelper function for add_current_update_v.\n\n\n\n\n\n","category":"method"},{"location":"particle_mesh_coupling/#GEMPIC.update_jv_pp!-Tuple{AbstractArray, ParticleMeshCoupling1D, Float64, Float64, Int64, Float64}","page":"Particle-Mesh coupling","title":"GEMPIC.update_jv_pp!","text":"update_jv_pp!( j_dofs, p, lower, upper, index, marker_charge)\n\nHelper function for add_current_update_v.\n\n\n\n\n\n","category":"method"},{"location":"splinepp/#Periodic-spline","page":"Periodic spline","title":"Periodic spline","text":"","category":"section"},{"location":"splinepp/","page":"Periodic spline","title":"Periodic spline","text":"Modules = [GEMPIC]\nPages   = [\"splinepp.jl\"]","category":"page"},{"location":"splinepp/#GEMPIC.SplinePP","page":"Periodic spline","title":"GEMPIC.SplinePP","text":"SplinePP( degree, ncells)\n\ndegree : degree of 1d spline\npoly_coeffs : poly_coeffs[i,j] coefficient of x^deg+1-j for ith B-spline function  size= (degree+1, degree+1)\npoly_coeffs_fp : poly_coeffs[i,j] coefficient of x^deg+1-j for ith B-spline function  size= (degree+1, degree+1)\nncells : number of gridcells\nscratch_b : scratch data for b_to_pp-converting\nscratch_p : scratch data for b_to_pp-converting\n\n\n\n\n\n","category":"type"},{"location":"splinepp/#GEMPIC.b_to_pp-Tuple{GEMPIC.SplinePP, Int64, Vector{Float64}}","page":"Periodic spline","title":"GEMPIC.b_to_pp","text":"b_to_pp( SplinePP, ncells, b_coeffs)\n\nConvert 1d spline in B form to spline in pp form with  periodic boundary conditions\n\n\n\n\n\n","category":"method"},{"location":"splinepp/#GEMPIC.b_to_pp_1d_cell!-Tuple{Any, Any, Any}","page":"Periodic spline","title":"GEMPIC.b_to_pp_1d_cell!","text":"b_to_pp_1d_cell( self, b_coeffs, pp_coeffs )\n\nConvert 1d spline in B form in a cell to spline in pp form with periodic boundary conditions\n\nspline : arbitrary degree 1d spline \nb_coeffs(self%degree+1) : coefficients of spline in B-form\npp_coeffs(self%degree+1) : coefficients of spline in pp-form\n\n\n\n\n\n","category":"method"},{"location":"splinepp/#GEMPIC.b_to_pp_2d!-Tuple{Any, GEMPIC.SplinePP, GEMPIC.SplinePP, Any}","page":"Periodic spline","title":"GEMPIC.b_to_pp_2d!","text":"b_to_pp_2d!( pp, spl1, spl2, b)\n\nConvert 2d spline in B form to spline in pp form   \n\nn_cells(2) : number of gridcells\nb_coeffs   : coefficients of spline in B-form\npp_coeffs  : coefficients of spline in pp-form\n\n\n\n\n\n","category":"method"},{"location":"splinepp/#GEMPIC.b_to_pp_2d_cell!-Tuple{Any, GEMPIC.SplinePP, GEMPIC.SplinePP, Any, Any, Any}","page":"Periodic spline","title":"GEMPIC.b_to_pp_2d_cell!","text":"b_to_pp_2d_cell(spline1, spline2, b_coeffs, pp_coeffs, i, j)\n\nConvert 2d spline in B form in a cell to spline in pp form with periodic boundary conditions \n\nspline1 : arbitrary degree 1d spline\nspline2 : arbitrary degree 1d spline\nn_cells(2) : number of gridcells\nbcoeffs(ncells(1)*n_cells(2)) : coefficients of spline in B-form\nppcoeffs((spline1.degree+1)*(spline2.degree+1),ncells(1)*n_cells(2)) : coefficients of spline in pp-form\n\n\n\n\n\n","category":"method"},{"location":"splinepp/#GEMPIC.horner_1d-Tuple{Int64, Any, Float64, Int64}","page":"Periodic spline","title":"GEMPIC.horner_1d","text":"horner_1d(degree, pp_coeffs, x, index)\n\nPerform a 1d Horner schema on the pp_coeffs at index\n\n\n\n\n\n","category":"method"},{"location":"splinepp/#GEMPIC.horner_2d-NTuple{5, Any}","page":"Periodic spline","title":"GEMPIC.horner_2d","text":"horner_2d(degrees, pp_coeffs, position, indices, ncells)\n\nPerform a 2d hornerschema on the pp_coeffs at the indices\n\ndegree : degree of the spline\npp_coeffs : coefficients of spline in pp-form\nposition(2) : point at which we evaluate our spline\nindices(2) : indices of cell in which is x\nncells(2) : number of gridcells\nres : value of the splinefunction at position\n\n\n\n\n\n","category":"method"},{"location":"splinepp/#GEMPIC.horner_m_2d!-Tuple{Any, GEMPIC.SplinePP, GEMPIC.SplinePP, Any, Any, Any}","page":"Periodic spline","title":"GEMPIC.horner_m_2d!","text":"horner_m_2d!(val, spl1, spl2, degree, x)\n\nPerform two times a 1d hornerschema on the poly_coeffs\n\nval : array of values\ndegree : degree of the spline\nx : point at which we evaluate our spline\n\n\n\n\n\n","category":"method"},{"location":"splinepp/#GEMPIC.horner_primitive_1d-Tuple{Vector{Float64}, Any, Any, Any}","page":"Periodic spline","title":"GEMPIC.horner_primitive_1d","text":"horner_primitive_1d(val, degree, pp_coeffs, x)\n\nPerform a 1d Horner schema on the pp_coeffs evaluate at x\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#Diagnostics","page":"Diagnostics","title":"Diagnostics","text":"","category":"section"},{"location":"diagnostics/","page":"Diagnostics","title":"Diagnostics","text":"Modules = [GEMPIC]\nPages   = [\"diagnostics.jl\"]","category":"page"},{"location":"diagnostics/#GEMPIC.TimeHistoryDiagnostics","page":"Diagnostics","title":"GEMPIC.TimeHistoryDiagnostics","text":"TimeHistoryDiagnostics( particle_group, maxwell_solver, \n                        kernel_smoother_0, kernel_smoother_1 )\n\nContext to save and plot diagnostics\n\nparticle_group : Particles data\nmaxwell_solver : Maxwell solver\nkernel_smoother_0 : Mesh coupling operator\nkernel_smoother_1 : Mesh coupling operator\ndata : DataFrame containing time history values\n\n\n\n\n\n","category":"type"},{"location":"diagnostics/#GEMPIC.eval_derivative_spline-NTuple{6, Any}","page":"Diagnostics","title":"GEMPIC.eval_derivative_spline","text":"eval_derivative_spline( position, xmin, delta_x, n_grid, \n                        field_dofs, degree, derivative )\n\nCompute the spline coefficient of the derivative of some given spline expansion\n\nposition : particle position\nxmin : lower boundary of the domain\ndelta_x : step \nn_grid : number of grid points\nfield_dofs : coefficients of spline representation of the field\ndegree : degree of spline\nderivative : value of the derivative\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#GEMPIC.evaluate-Tuple{ParticleMeshCoupling1D, AbstractArray, AbstractArray}","page":"Diagnostics","title":"GEMPIC.evaluate","text":"evaluate( kernel_smoother, field_dofs,  xi, n_dofs )\n\nEvaluate the field at points xi\n\nfield_dofs : field value on dofs\nxi : positions where the field is evaluated\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#GEMPIC.pic_diagnostics_hpi-Tuple{Any, Any, Any}","page":"Diagnostics","title":"GEMPIC.pic_diagnostics_hpi","text":"pic_diagnostics_hpi( particle_group,  index, kinetic )\n\ncompute v(index)-part of kinetic energy\n\nparticle_group \nindex : velocity component\nkinetic : value of index part of kinetic energy\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#GEMPIC.pic_diagnostics_poynting-NTuple{4, Any}","page":"Diagnostics","title":"GEMPIC.pic_diagnostics_poynting","text":"pic_diagnostics_poynting( maxwell_solver, degree, efield_dofs, bfield_dofs, \n                          rho )\n\nCompute e^T M_0^-1  R^T b\n\nmaxwell_solver : maxwell solver object\ndegree : degree of finite element\nefield_dofs : coefficients of efield\nbfield_dofs : coefficients of bfield\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#GEMPIC.pic_diagnostics_transfer-Tuple{ParticleGroup{1, 2}, Any, Any, Any}","page":"Diagnostics","title":"GEMPIC.pic_diagnostics_transfer","text":"pic_diagnostics_transfer( particle_group, kernel_smoother_0, \n                        kernel_smoother_1, efield_dofs, transfer)\n\nCompute sum_particles w_p ( v_1p e_1(x_p) + v_2p e_2(x_p))\n\nparticle_group   \nkernel_smoother_0  : Kernel smoother (order p+1)\nkernel_smoother_1  : Kernel smoother (order p)   \nefield_dofs : coefficients of efield\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#GEMPIC.pic_diagnostics_vvb-Tuple{Any, Any, Any}","page":"Diagnostics","title":"GEMPIC.pic_diagnostics_vvb","text":"pic_diagnostics_vvb( particle_group, kernel_smoother_1, bfield_dofs )\n\nCompute sum_particles ( w_p v_1 p b(x_p) v_2 p )\n\nparticle_group    : particle group object\nkernel_smoother_1 : Kernel smoother (order p)  \nbfield_dofs : coefficients of bfield\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#GEMPIC.solve_poisson!-Tuple{Vector{Float64}, GEMPIC.AbstractParticleGroup, GEMPIC.AbstractParticleMeshCoupling, Maxwell1DFEM, Vector{Float64}}","page":"Diagnostics","title":"GEMPIC.solve_poisson!","text":"solvepoisson!( efield, particlegroup, kernelsmoother, maxwellsolver, rho )\n\nAccumulate rho and solve Poisson\n\nparticle_group : Particles\nmaxwell_solver : Maxwell solver (FEM 1D)\nkernel_smoother_0 : Particle-Mesh method\nrho : preallocated array for Charge density\nefield_dofs : spline coefficients of electric field (1D)\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#GEMPIC.write_step!-Tuple{TimeHistoryDiagnostics, Any, Any, Any, Any, Any, Any}","page":"Diagnostics","title":"GEMPIC.write_step!","text":"write_step!( thdiag, time, degree, efield_dofs, bfield_dofs,\n             efield_dofs_n, efield_poisson)\n\nwrite diagnostics for PIC\n\ntime : Time\nefield_dofs : Electric field\nefield_dofs_n : Electric field at half step\nefield_poisson : Electric field compute from Poisson equation\nbfield_dofs : Magnetic field\ndegree : Spline degree\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#Spin-version","page":"Diagnostics","title":"Spin version","text":"","category":"section"},{"location":"diagnostics/","page":"Diagnostics","title":"Diagnostics","text":"Modules = [GEMPIC]\nPages   = [\"diagnostics_spin.jl\"]","category":"page"},{"location":"diagnostics/#GEMPIC.TimeHistoryDiagnosticsSpin","page":"Diagnostics","title":"GEMPIC.TimeHistoryDiagnosticsSpin","text":"TimeHistoryDiagnosticsSpin( particle_group, maxwell_solver, \n                        kernel_smoother_0, kernel_smoother_1 )\n\nContext to save and plot diagnostics\n\nparticle_group : Particles data\nmaxwell_solver : Maxwell solver\nkernel_smoother_0 : Mesh coupling operator\nkernel_smoother_1 : Mesh coupling operator\ndata : DataFrame containing time history values\n\n\n\n\n\n","category":"type"},{"location":"diagnostics/#GEMPIC.pic_diagnostics_transfer-Tuple{ParticleGroup{1, 1}, Any, Vector{Float64}}","page":"Diagnostics","title":"GEMPIC.pic_diagnostics_transfer","text":"pic_diagnostics_transfer( particle_group, kernel_smoother, efield_dofs)\n\nCompute sum_particles w  p e(x_p)\n\nparticle_group   \nkernel_smoother : Kernel smoother\nefield_dofs : coefficients of efield\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#GEMPIC.write_step!-Tuple{TimeHistoryDiagnosticsSpin, Any, Any, Any, Any, Any, Any, Any}","page":"Diagnostics","title":"GEMPIC.write_step!","text":"write_step!( thdiag, time, degree, efield_dofs, bfield_dofs,\n             efield_dofs_n, efield_poisson)\n\nwrite diagnostics for PIC\n\ntime : Time\nafield_dofs[1] : Magnetic Potential Ay\nafield_dofs[2] : Magnetic Potential Az\nefield_dofs[1] : Longitudinal Electric field Ex\nefield_poisson : Electric field compute from Poisson equation\nefield_dofs[2] : Ey\nefield_dofs[3] : Ez\ndegree : Spline degree\n\n\n\n\n\n","category":"method"},{"location":"maxwell_solver/#Maxwell-solver","page":"Maxwell solver","title":"Maxwell solver","text":"","category":"section"},{"location":"maxwell_solver/","page":"Maxwell solver","title":"Maxwell solver","text":"Modules = [GEMPIC]\nPages   = [\"maxwell_1d_fem.jl\"]","category":"page"},{"location":"maxwell_solver/#GEMPIC.Maxwell1DFEM","page":"Maxwell solver","title":"GEMPIC.Maxwell1DFEM","text":"maxwell_solver = MaxwellFEM1D( mesh, degree )\n\n1D Maxwell spline finite element solver on a periodic grid\n\nLx                   : length of Periodic domain\ndelta_x              : cell size\nn_dofs               : number of cells (and grid points)\ns_deg_0              : spline degree 0-forms\ns_deg_1              : spline degree 1-forms\nmass_0               : coefficients of 0-form mass matrix\nmass_1               : coefficients of 1-form mass matrix\neig_mass0            : eigenvalues of circulant 0-form mass matrix\neig_mass1            : eigenvalues of circulant 1-form mass matrix\neig_weak_ampere      : eigenvalues of circulant update matrix for Ampere\neig_weak_poisson     : eigenvalues of circulant update matrix for Poisson\nplan_fw              : fft plan (forward)\nplan_bw              : fft plan (backward)\n\n\n\n\n\n","category":"type"},{"location":"maxwell_solver/#GEMPIC.compute_b_from_e!-Tuple{Vector{Float64}, Maxwell1DFEM, Float64, Vector{Float64}}","page":"Maxwell solver","title":"GEMPIC.compute_b_from_e!","text":"compute_b_from_e!( field_out, maxwell_solver, delta_t, field_in)\n\nCompute Bz from Ey using strong 1D Faraday equation for spline coefficients\n\nB_z^new(x_j) = B_z^old(x_j) - fracDelta tDelta x (E_y(x_j) - E_y(x_j-1)\n\n\n\n\n\n","category":"method"},{"location":"maxwell_solver/#GEMPIC.compute_e_from_b!-Tuple{Vector{Float64}, Maxwell1DFEM, Float64, Vector{Float64}}","page":"Maxwell solver","title":"GEMPIC.compute_e_from_b!","text":"compute_e_from_b!(field_out, maxwell_solver, delta_t, field_in)\n\ncompute Ey from Bz using weak Ampere formulation \n\n\n\n\n\n","category":"method"},{"location":"maxwell_solver/#GEMPIC.compute_e_from_j!-Tuple{Vector{Float64}, Maxwell1DFEM, Vector{Float64}, Int64}","page":"Maxwell solver","title":"GEMPIC.compute_e_from_j!","text":"compute_e_from_j!(e, maxwell_solver, current, component)\n\nCompute E_i from j_i integrated over the time interval using weak Ampere formulation\n\n\n\n\n\n","category":"method"},{"location":"maxwell_solver/#GEMPIC.compute_rhs_from_function!-Tuple{Vector{Float64}, Maxwell1DFEM, Function, Int64}","page":"Maxwell solver","title":"GEMPIC.compute_rhs_from_function!","text":"computerhsfromfunction(self, func, degree, coefsdofs)\n\nCompute the FEM right-hand-side for a given function f and periodic splines of given degree.\n\nIts components are int f N_i dx where N_i is the B-spline starting at x_i. \n\n\n\n\n\n","category":"method"},{"location":"maxwell_solver/#GEMPIC.inner_product-NTuple{4, Any}","page":"Maxwell solver","title":"GEMPIC.inner_product","text":"inner_product( maxwell_solver, coefs1_dofs, coefs2_dofs, degree )\n\nmaxwell_solver : Maxwell solver object\ncoefs1_dofs : Coefficient for each DoF\ncoefs2_dofs : Coefficient for each DoF\n`degree : Specify the degree of the basis functions\n\nreturn squared L2 norm\n\n\n\n\n\n","category":"method"},{"location":"maxwell_solver/#GEMPIC.l2norm_squared-Tuple{Any, Any, Any}","page":"Maxwell solver","title":"GEMPIC.l2norm_squared","text":"l2norm_squared(maxwell_solver, coefs_dofs, degree)\n\nCompute square of the L2norm \n\n\n\n\n\n","category":"method"},{"location":"maxwell_solver/#GEMPIC.l2norm_squared2-Tuple{Any, Any, Any}","page":"Maxwell solver","title":"GEMPIC.l2norm_squared2","text":"l2norm_squared(maxwell_solver, coefs_dofs, degree)\n\nCompute square of the L2norm \n\n\n\n\n\n","category":"method"},{"location":"maxwell_solver/#GEMPIC.l2projection!-Tuple{Vector{Float64}, Maxwell1DFEM, Function, Int64}","page":"Maxwell solver","title":"GEMPIC.l2projection!","text":"l2projection!(coefs_dofs, maxwell, func, degree)\n\nCompute the L2 projection of a given function f on periodic splines  of given degree\n\n\n\n\n\n","category":"method"},{"location":"low_level_bsplines/#Splines","page":"Splines","title":"Splines","text":"","category":"section"},{"location":"low_level_bsplines/","page":"Splines","title":"Splines","text":"Modules = [GEMPIC]\nPages   = [\"low_level_bsplines.jl\"]","category":"page"},{"location":"low_level_bsplines/#GEMPIC.eval_uniform_periodic_spline_curve-Tuple{Int64, Vector{Float64}}","page":"Splines","title":"GEMPIC.eval_uniform_periodic_spline_curve","text":"eval_uniform_periodic_spline_curve( degree, scoef )\n\nEvaluate uniform periodic spline curve defined by coefficients scoef at  knots (which are the grid points) \n\n\n\n\n\n","category":"method"},{"location":"low_level_bsplines/#GEMPIC.uniform_bsplines_eval_basis-Tuple{Int64, Float64}","page":"Splines","title":"GEMPIC.uniform_bsplines_eval_basis","text":"uniform_bsplines_eval_basis( spline_degree, normalized_offset, bspl )\n\nUNIFORM B-SPLINE FUNCTIONS\n\nEvaluate all non vanishing uniform B-Splines in unit cell.\n\nReturns an array with the values of the b-splines of the  requested degree, evaluated at a given cell offset. The cell size is normalized between 0 and 1, thus the offset given must be a number between 0 and 1.\n\nOutput: \n\nbspl(1d+1)= B_d(-(d+1)2+d+x)B_d(-(d+1)2+x)\n\nwith d=spline_degree and x=normalized_offset where B_d=B_d-1*B_0 and B_0=1_-1212 and * is convolution the following FORTRAN code can be used for comparison with  deboor\n\ndo i=-d,d+1\n    t(i+d+1)=real(i,8)\nend do\ncall bsplvb(t,d+1,1,normalized_offset,d+1,out)\n\nWe also have the property (from the symmetry of the B-spline)\n\nout1d+1= B_d(-(d+1)2+xx)B_d(-(d+1)2+d+xx) \n\nwhere xx=1- normalized_offset\n\n\n\n\n\n","category":"method"},{"location":"strong_landau_damping/#Strong-Landau-Damping","page":"Strong Landau Damping","title":"Strong Landau Damping","text":"","category":"section"},{"location":"strong_landau_damping/","page":"Strong Landau Damping","title":"Strong Landau Damping","text":"If we only use the subsystems H_p and H_E, we are solving Vlasov–Poisson system. In this test, initial condition is as follows:","category":"page"},{"location":"strong_landau_damping/","page":"Strong Landau Damping","title":"Strong Landau Damping","text":"f_0(xv) = frac1sqrt2pi sigmae^-fracv^22sigma^2(1+alpha cos(kx)) quad E_10 (x) = fracalphaksin(kx)  x in 02pik )   v in mathbbR^2","category":"page"},{"location":"strong_landau_damping/","page":"Strong Landau Damping","title":"Strong Landau Damping","text":"using Plots","category":"page"},{"location":"strong_landau_damping/","page":"Strong Landau Damping","title":"Strong Landau Damping","text":"using GEMPIC","category":"page"},{"location":"strong_landau_damping/","page":"Strong Landau Damping","title":"Strong Landau Damping","text":"The physical parameters are chosen as sigma = 1, k = 05, alpha = 05, and the numerical parameters as Delta t = 005, n_x = 32 and 2 times 10^5 particles. We use second order Strang splitting method in time.","category":"page"},{"location":"strong_landau_damping/","page":"Strong Landau Damping","title":"Strong Landau Damping","text":"σ, μ = 1.0, 0.0\nkx, α = 0.5, 0.5\nxmin, xmax = 0, 2π/kx\n∆t = 0.05\nnx = 32\nn_particles = 100000\nmesh = OneDGrid( xmin, xmax, nx)\nspline_degree = 3\n\ndf = CosSumGaussian{1,2}([[kx]], [α], [[σ,σ]], [[μ,μ]] )\n\nmass, charge = 1.0, 1.0\nparticle_group = ParticleGroup{1,2}(n_particles)\nsampler = ParticleSampler{1,2}( :sobol, true, n_particles)\n\nsample!(particle_group, sampler, df, mesh)\n\nxp = view(particle_group.array, 1, :)\nvp = view(particle_group.array, 2:3, :)\nwp = view(particle_group.array, 4, :);\n\np = plot(layout=(3,1))\nhistogram!(p[1,1], xp, weights=wp, normalize=true, bins = 100, lab = \"\")\nplot!(p[1,1], x-> (1+α*cos(kx*x))/(2π/kx), 0., 2π/kx, lab=\"\")\nhistogram!(p[2,1], vp[1,:], weights=wp, normalize=true, bins = 100, lab = \"\")\nplot!(p[2,1], v-> exp( - v^2 / 2) * 4 / π^2 , -6, 6, lab=\"\")\nhistogram!(p[3,1], vp[2,:], weights=wp, normalize=true, bins = 100, lab = \"\")\nplot!(p[3,1], v-> exp( - v^2 / 2) * 4 / π^2 , -6, 6, lab=\"\")","category":"page"},{"location":"strong_landau_damping/","page":"Strong Landau Damping","title":"Strong Landau Damping","text":"Initialize the arrays for the spline coefficients of the fields","category":"page"},{"location":"strong_landau_damping/","page":"Strong Landau Damping","title":"Strong Landau Damping","text":"kernel_smoother1 = ParticleMeshCoupling1D( mesh, n_particles, spline_degree-1, :galerkin)\nkernel_smoother0 = ParticleMeshCoupling1D( mesh, n_particles, spline_degree, :galerkin)\n","category":"page"},{"location":"strong_landau_damping/#Initialize-field-solver","page":"Strong Landau Damping","title":"Initialize field solver","text":"","category":"section"},{"location":"strong_landau_damping/","page":"Strong Landau Damping","title":"Strong Landau Damping","text":"p = plot(layout=(1,2))\nrho = zeros(Float64, nx)\nefield_poisson = zeros(Float64, nx)\nmaxwell_solver = Maxwell1DFEM(mesh, spline_degree)\nsolve_poisson!( efield_poisson, particle_group, kernel_smoother0, maxwell_solver, rho )\nxg = LinRange(xmin, xmax, nx)\nsval = eval_uniform_periodic_spline_curve(spline_degree-1, rho)\nplot!(p[1,1], xg, sval, title=:rho, label=nothing)\nsval = eval_uniform_periodic_spline_curve(spline_degree-1, efield_poisson)\nplot!(p[1,2], xg, sval, title=:ex, label=nothing )\n","category":"page"},{"location":"strong_landau_damping/#Simulation-function","page":"Strong Landau Damping","title":"Simulation function","text":"","category":"section"},{"location":"strong_landau_damping/","page":"Strong Landau Damping","title":"Strong Landau Damping","text":"You will get better performance if your simulation is inside a function:","category":"page"},{"location":"strong_landau_damping/","page":"Strong Landau Damping","title":"Strong Landau Damping","text":"function run( steps)\n\n    σ, μ = 1.0, 0.0\n    kx, α = 0.5, 0.5\n    xmin, xmax = 0, 2π/kx\n    dt = 0.05\n    nx = 32\n    n_particles = 100000\n    mesh = OneDGrid( xmin, xmax, nx)\n    spline_degree = 3\n\n    df = CosSumGaussian{1,2}([[kx]], [α], [[σ,σ]], [[μ,μ]] )\n\n    mass, charge = 1.0, 1.0\n    particle_group = ParticleGroup{1,2}(n_particles)\n    sampler = ParticleSampler{1,2}( :sobol, true, n_particles)\n\n    sample!(particle_group, sampler, df, mesh)\n\n    kernel_smoother1 = ParticleMeshCoupling1D( mesh, n_particles, spline_degree-1, :galerkin)\n    kernel_smoother0 = ParticleMeshCoupling1D( mesh, n_particles, spline_degree, :galerkin)\n\n    rho = zeros(Float64, nx)\n    efield_poisson = zeros(Float64, nx)\n\n    maxwell_solver = Maxwell1DFEM(mesh, spline_degree)\n\n    solve_poisson!( efield_poisson, particle_group, kernel_smoother0, maxwell_solver, rho )\n\n    efield_dofs = [efield_poisson, zeros(Float64, nx)]\n    bfield_dofs = zeros(Float64, nx)\n\n    propagator = HamiltonianSplitting( maxwell_solver,\n                                       kernel_smoother0,\n                                       kernel_smoother1,\n                                       particle_group,\n                                       efield_dofs,\n                                       bfield_dofs)\n\n    efield_dofs_n = propagator.e_dofs\n\n    thdiag = TimeHistoryDiagnostics( particle_group, maxwell_solver,\n                            kernel_smoother0, kernel_smoother1 )\n\n    for j = 1:steps # loop over time\n\n        strang_splitting!(propagator, dt, 1)\n\n        solve_poisson!( efield_poisson, particle_group,\n                        kernel_smoother0, maxwell_solver, rho)\n\n        write_step!(thdiag, j * dt, spline_degree,\n                        efield_dofs,  bfield_dofs,\n                        efield_dofs_n, efield_poisson)\n    end\n\n    return thdiag.data\n\nend","category":"page"},{"location":"strong_landau_damping/","page":"Strong Landau Damping","title":"Strong Landau Damping","text":"@time results = run(1000);\nnothing # hide","category":"page"},{"location":"strong_landau_damping/#Time-evolution-of-electric-energy","page":"Strong Landau Damping","title":"Time evolution of electric energy","text":"","category":"section"},{"location":"strong_landau_damping/","page":"Strong Landau Damping","title":"Strong Landau Damping","text":"plot(results[!,:Time], log.(results[!,:PotentialEnergyE1]))","category":"page"},{"location":"hamiltonian_splitting_spin/#Hamiltonian-splitting-Spin","page":"Hamiltonian splitting Spin","title":"Hamiltonian splitting Spin","text":"","category":"section"},{"location":"hamiltonian_splitting_spin/","page":"Hamiltonian splitting Spin","title":"Hamiltonian splitting Spin","text":"Modules = [GEMPIC]\nPages   = [\"hamiltonian_splitting_spin.jl\"]","category":"page"},{"location":"hamiltonian_splitting_spin/#GEMPIC.HamiltonianSplittingSpin","page":"Hamiltonian splitting Spin","title":"GEMPIC.HamiltonianSplittingSpin","text":"HamiltonianSplittingSpin( maxwell_solver,\n                          kernel_smoother_0, kernel_smoother_1,\n                          particle_group, e_dofs, a_dofs )\n\nHamiltonian splitting type for Vlasov-Maxwell\n\nIntegral over the spline function on each interval (order p+1)\nIntegral over the spline function on each interval (order p)\ne_dofs describing the two components of the electric field\na_dofs describing the potential vector\n\n\n\n\n\n","category":"type"},{"location":"hamiltonian_splitting_spin/#GEMPIC.operatorHA-Tuple{HamiltonianSplittingSpin, Float64}","page":"Hamiltonian splitting Spin","title":"GEMPIC.operatorHA","text":"operatorHA(h, dt)\n\nbeginaligned\ndotp = (A_y A_z) cdot partial_x (A_y A_z)   \ndotEy = -partial_x^2 A_y + A_y rho \ndotEz = -partial_x^2 A_z + A_z rho \nendaligned\n\n\n\n\n\n","category":"method"},{"location":"hamiltonian_splitting_spin/#GEMPIC.operatorHE-Tuple{HamiltonianSplittingSpin, Float64}","page":"Hamiltonian splitting Spin","title":"GEMPIC.operatorHE","text":"operatorHE(h, dt)\n\nbeginaligned\ndotv    =  E_x \ndotA_y  = -E_y \ndotA_z  = -E_z\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"hamiltonian_splitting_spin/#GEMPIC.operatorHp-Tuple{HamiltonianSplittingSpin, Float64}","page":"Hamiltonian splitting Spin","title":"GEMPIC.operatorHp","text":"operatorHp(h, dt)\n\nbeginaligned\ndotx  =p \ndotE_x  = - int (p f ) dp ds\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"hamiltonian_splitting_spin/#GEMPIC.operatorHs-Tuple{HamiltonianSplittingSpin, Float64}","page":"Hamiltonian splitting Spin","title":"GEMPIC.operatorHs","text":"operatorHs(h, dt)\n\nPush H_s: Equations to be solved\n\nbeginaligned\ndots = s x B = (s_y partial_x A_y +s_z partial_x Az -s_x partial_x A_y -s_x partial_x A_z)  \ndotp = s cdot partial_x B = -s_y partial^2_x A_z + s_z partial^2_x A_y \ndotE_y =   int (s_z partial_x f) dp ds \ndotE_z = - int (s_y partial_x f) dp ds \nendaligned\n\n\n\n\n\n","category":"method"},{"location":"hamiltonian_splitting_spin/#GEMPIC.strang_splitting!-Tuple{HamiltonianSplittingSpin, Float64, Int64}","page":"Hamiltonian splitting Spin","title":"GEMPIC.strang_splitting!","text":"strang_splitting( h, dt, number_steps)\n\nStrang splitting\n\ntime splitting object \ntime step\nnumber of time steps\n\n\n\n\n\n","category":"method"},{"location":"particle_sampling/#Particle-sampling","page":"Particle sampling","title":"Particle sampling","text":"","category":"section"},{"location":"particle_sampling/","page":"Particle sampling","title":"Particle sampling","text":"Modules = [GEMPIC]\nPages   = [\"particle_sampling.jl\"]","category":"page"},{"location":"particle_sampling/#GEMPIC.ParticleSampler","page":"Particle sampling","title":"GEMPIC.ParticleSampler","text":"ParticleSampler{D,V}( sampling_type, symmetric, dims, n_particles)\n\nParticle initializer class with various functions to initialize a particle.\n\nsampling_type : :random or :sobol\nsymmetric : true or false\nn_particles : number of particles\n\n\n\n\n\n","category":"type"},{"location":"particle_sampling/#GEMPIC.sample!-Tuple{ParticleGroup{1, 1}, ParticleSampler, GEMPIC.AbstractCosGaussian, OneDGrid}","page":"Particle sampling","title":"GEMPIC.sample!","text":"sample!(d, pg)\n\nSampling from a probability distribution to initialize a Landau damping in 1D1V space.\n\nf_0(xvt) = fracn_02π v_th^2 ( 1 + alpha cos(k_x x)) exp( - fracv^22 v_th^2)\n\n\n\n\n\n","category":"method"},{"location":"particle_sampling/#GEMPIC.sample!-Tuple{ParticleGroup{1, 2}, ParticleSampler, GEMPIC.AbstractCosGaussian, GEMPIC.AbstractGrid}","page":"Particle sampling","title":"GEMPIC.sample!","text":"sample!( pg, ps, df, mesh)\n\nSample from a Particle sampler\n\npg   : Particle group\nps   : Particle sampler\ndf   : Distribution function\nxmin : lower bound of the domain\ndimx : length of the domain.\n\n\n\n\n\n","category":"method"},{"location":"particle_sampling/#GEMPIC.sample_all-Tuple{Any, ParticleGroup{1, 2}, GEMPIC.AbstractCosGaussian, Any}","page":"Particle sampling","title":"GEMPIC.sample_all","text":"sample_all( ps, pg, df, mesh )\n\nHelper function for pure sampling\n\n\n\n\n\n","category":"method"},{"location":"particle_sampling/#GEMPIC.sample_sym-NTuple{4, Any}","page":"Particle sampling","title":"GEMPIC.sample_sym","text":"sample_sym( ps, pg, df, mesh )\n\nHelper function for antithetic sampling in 1d2v\n\n\n\n\n\n","category":"method"},{"location":"particle_sampling/#Special-case-of-the-Landau-Damping","page":"Particle sampling","title":"Special case of the Landau Damping","text":"","category":"section"},{"location":"particle_sampling/","page":"Particle sampling","title":"Particle sampling","text":"Modules = [GEMPIC]\nPages   = [\"landau_damping.jl\"]","category":"page"},{"location":"particle_sampling/#GEMPIC.LandauDamping","page":"Particle sampling","title":"GEMPIC.LandauDamping","text":"Landau( α, kx)\n\nTest structure to initialize a particles distribtion for Landau damping test case in 1D1V and 1D2V\n\n\n\n\n\n","category":"type"},{"location":"particle_sampling/#GEMPIC.sample!-Tuple{GEMPIC.LandauDamping, ParticleGroup{1, 2}}","page":"Particle sampling","title":"GEMPIC.sample!","text":"sample!(d, pg)\n\nSampling from a probability distribution to initialize a Landau damping in 1D2V space.\n\nf_0(xvt) = fracn_02π v_th^2 ( 1 + alpha cos(k_x x))\n exp( - fracv_x^2+v_y^22 v_th^2)\n\nThe newton function solves the equation P(x)-r=0 with Newton’s method\n\nx^n+1 = x^n  (P(x)-(2pi r  k)f(x) \n\nwith \n\nP(x) = int_0^x (1 + alpha cos(k_x y)) dy = x + fracalphak_x sin(k_x x)\n\n\n\n\n\n","category":"method"},{"location":"particle_sampling/#Spin-version","page":"Particle sampling","title":"Spin version","text":"","category":"section"},{"location":"particle_sampling/","page":"Particle sampling","title":"Particle sampling","text":"Modules = [GEMPIC]\nPages   = [\"particle_sampling_spin.jl\"]","category":"page"},{"location":"particle_sampling/#GEMPIC.sample!-Tuple{ParticleGroup{1, 1}, ParticleSampler, CosSumGaussianSpin, GEMPIC.AbstractGrid}","page":"Particle sampling","title":"GEMPIC.sample!","text":"sample!( pg, ps, df, mesh)\n\nSample from a Particle sampler\n\npg   : Particle group\nps   : Particle sampler\ndf   : Distribution function\nxmin : lower bound of the domain\nLx   : length of the domain.\n\n\n\n\n\n","category":"method"},{"location":"scalar_spin_vlasov_maxwell/#One-Reduced-Scalar-Spin-Vlasov-Maxwell","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"Yingzhe Li \nUniversity of Chinese Academy of Sciences, Beijing 100049, CHINA\nLSEC, Academy of Mathematics and Systems Science, Chinese Academy of Sciences, Beijing 100190,  CHINA","category":"page"},{"location":"scalar_spin_vlasov_maxwell/#Spin-Vlasov-Maxwell-equations","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"Spin Vlasov-Maxwell equations","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"The dimensionless non-relativistic spin Vlasov-Maxwell system is","category":"page"},{"location":"scalar_spin_vlasov_maxwell/#vlasov","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"Vlasov equation","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"begingather\nfracpartial fpartial t+bf vcdotfracpartial fpartialbf x+left(bf E+bf vtimesbf Bright) - nabla(bf s cdot bf B)cdotfracpartial fpartialbf v - (bf stimes bf B) cdot fracpartial fpartial bf s = 0 labeleqVlasovn\nfracpartialbf Epartial t  =  nablatimesbf B-bf J labeleqMaxwellEn \nfracpartialbf Bpartial t  =  - nablatimesbf E labeleqMaxwellBn  \nnablacdotbf E  = rho-1 labeleqdivEn \nnablacdotbf B  = 0 labeleqdivBn\nendgather","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"with bf J(bf x t) =int_mathbbR^3times mathbbR^3 bf vf(bf x bf vbf s t) mathrmdbf vmathrmdbf s - nabla times bf M(bf x t), bf M(bf x t) = int_mathbbR^3times mathbbR^3 bf sf(bf x bf vbf s t) mathrmdbf vmathrmdbf s, rho(bf x t)=int_mathbbR^3 f(bf x bf vbf s t) mathrmdbf vmathrmdbf s, nabla here represents the gradient about bf x.","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"Denote mathcalM the infinite dimensional manifold left(f bf Ebf B) nablacdotbf B=0right. Spin Vlasov-Maxwell system can be expressed with the Poisson bracket[1] in the purpose of   using the idea of geometric numerical integration[3]. For  two functionals mathcalF and mathcalG defined on mathcal M,  we introduce  the  Poisson bracket presented in [1].","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginalignlabeleqMMWB\nbeginsplit\nmathcalFmathcalG = mathcalF mathcalG_VM +  mathcalF mathcalG_s\n=\nint_Omega fleftfracdeltamathcalFdelta ffracdeltamathcalG\ndelta fright_mathbfxvmathrmdmathbfxmathrmdmathbfvdmathbfs\n  +int_Omega left(fracdeltamathcalFdeltamathbfEcdotfracpartial fpartialmathbfvfracdeltamathcalGdelta f-fracdeltamathcalGdeltamathbfEcdotfracpartial fpartialmathbfvfracdeltamathcalFdelta fright)mathrmdmathbfxmathrmdmathbfvmathrmdmathbfs\n  +int_Omega_bf xleft(fracdeltamathcalFdeltamathbfEcdotleft(triangledowntimesfracdeltamathcalGdeltamathbfBright)\n          -fracdeltamathcalGdeltamathbfEcdot\n left(triangledowntimesfracdeltamathcalFdeltamathbfBright)right)mathrmdmathbfx\n +int_Omega fbf Bcdotleft(fracpartialpartialmathbfvfracdeltamathbfmathrmmathcalFdelta ftimesfracpartialpartialmathbfvfracdeltamathcalGdelta fright)mathrmdmathbfxmathrmdmathbfvmathrmdmathbfs +  mathcalF mathcalG_s\n endsplit\nendalign","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":" mathcalF mathcalG_s = int_Omega fbf s cdot (fracpartial partial bf sfracdelta mathcalFdelta f times fracpartial partial bf s fracdelta mathcalGdelta f)mathrmdmathbfxmathrmdmathbfvmathrmdmathbfs","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"Here, leftcdotcdotright _mathbfxv denotes the Lie bracket for  two functions of left(bf xbf vright). It has been proved in [1] that the bracket(\\ref{eq:MMWB}) is Poisson. With  the  Hamiltonian functional defined  by","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nmathcalH(fmathbfEmathbfB)=frac12int_Omega mathbfv^2fdmathbfxdmathbfvdmathbfs+int_Omega bf scdot bf B fdmathbfxdmathbfvdmathbfs+ frac12int_Omega_bf x\nleft( mathbfE^2+mathbfB^2right)dmathbfxlabeleqHamiltonVM\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"the spin Vlasov-Maxwell system of equations (\\ref{eq:Vlasovn}-\\ref{eq:MaxwellBn})  is equivalent to","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\n fracpartialmathcal Zpartial t=mathcalZmathcalHlabeleqPoissonVM\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"where mathcalZin mathcalM.","category":"page"},{"location":"scalar_spin_vlasov_maxwell/#Hamiltonian-splitting-method","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"Hamiltonian splitting method","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"As in paper [4], we here adopt Hamiltonian splitting method to the spin Vlasov-Maxwell equations. Hamiltonian is split into 8 parts as follows,","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginalign\nmathcalH(fmathbfEmathbfB)=frac12int_Omega v_1^2fdmathbfxdmathbfvdmathbfs+frac12int_Omega v_2^2fdmathbfxdmathbfvdmathbfs+frac12int_Omega v_3^2fdmathbfxdmathbfvdmathbfs\n+int_Omega s_1cdot B_1 fdmathbfxdmathbfvdmathbfs+ int_Omega s_2cdot B_2 fdmathbfxdmathbfvdmathbfs+\nint_Omega s_3cdot B_3 fdmathbfxdmathbfvdmathbfs\n+frac12int_Omega_bf x\n mathbfE^2dmathbfx + frac12int_Omega_bf x\n mathbfB^2dmathbfx\n = H_1f+H_2f+H_3f + H_s1+H_s2+H_s3+H_E+H_B\nendalign","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"The subsystem corresponding to H_s1 is as follows.","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginalign\nfracpartial fpartial t -  nabla_x (s_1 B_1) cdot fracpartial fpartial bf v-s_3B_1 fracpartial f partial s_2 + s_2B_1fracpartial fpartial s_3 = 0\nfracpartial bf Epartial t = nabla_x times int bf a f dbf vdbf s\nfracpartial bf Bpartial t = 0\nendalign","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"where bf a = (s_1 0  0)^T.","category":"page"},{"location":"scalar_spin_vlasov_maxwell/#Reduced-spin-Vlasov–Maxwell-equations","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"Reduced spin Vlasov–Maxwell equations","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"Here we reduce the system (\\ref{eq:Vlasovn})-(\\ref{eq:divBn}) by the similar manner in [5].  The reduced spin Vlasov–Maxwell system is","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\nfracpartial fpartial t + p fracpartial fpartial x +  E_x - s_2 fracpartial^2 A_zpartial x^2 + s_3 fracpartial^2 A_ypartial x^2  - mathbf A_perp cdot fracpartial mathbf A_perppartial x fracpartial fpartial p  + s_3 fracpartial A_zpartial x + s_2 fracpartial A_ypartial x -s_1 fracpartial A_ypartial x -s_1 fracpartial A_zpartial x  cdot fracpartial fpartial mathbf s = 0\nfracpartial E_xpartial x = -int p f  mathrmdmathrmpmathrmdmathrmmathbf s\nfracpartial E_ypartial t = - fracpartial^2 A_ypartial x^2 + A_y int  f  mathrmdmathrmpmathrmdmathrmmathbf s + int s_3 fracpartial fpartial xmathrmdmathrmpmathrmdmathrmmathbf s\nfracpartial E_zpartial t = - fracpartial^2 A_zpartial x^2 + A_z int  f  mathrmdmathrmpmathrmdmathrmmathbf s - int s_2 fracpartial fpartial xmathrmdmathrmpmathrmdmathrmmathbf s\n fracpartial mathbf A_perppartial t = - mathbf E_perp\nfracpartial E_xpartial t = int f mathrmdmathrmpmathrmdmathrmmathbf s - 1\nendaligned\nlabeleqreduced\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"Particle distribution function is  f(x p mathbf s t), x p  are scalars mathbf s in mathbbR^3, mathbf E = (E_x mathbf E_perp) = (E_x E_y E_z), and mathbf A = (A_x mathbf A_perp) = (0 A_y A_z).","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"This reduced spin Vlasov-Maxwell system can be expressed with one Poisson  bracket as follows. For any two functionals mathcalF, and mathcalG depend on f mathbf E, and mathbf A_perp, we have","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\n mathcalF mathcalG = int_Omega fleftfracdeltamathcalFdelta ffracdeltamathcalG\ndelta fright_xpmathrmdxmathrmdpmathrmdmathbfs\n  +int_Omega left(fracdeltamathcalFdelta E_xfracpartial fpartial pfracdeltamathcalGdelta f-fracdeltamathcalGdelta E_xfracpartial fpartial pfracdeltamathcalFdelta fright)mathrmdxmathrmdpmathrmdmathbfs\n+ int_Omega left( fracdelta mathcalGdelta mathbf A_perp cdot  fracdelta mathcalFdelta mathbf E_perp - fracdelta mathcalFdelta mathbf A_perp cdot  fracdelta mathcalGdelta mathbf E_perpright) mathrmdx + int_Omega f mathbf scdot left( fracpartialpartial mathbf sfracdelta mathcalFdelta f times fracpartialpartial mathbf sfracdelta mathcalGdelta f right) mathrmdxmathrmdpmathrmdmathbf s\nendaligned\nlabeleqpoisson\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"With the Hamiltonian functional defined by ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\nmathcalH(f mathbf E mathbf A_perp) = frac12int_Omega p^2 f mathrmdxmathrmdpmathrmdmathbf s + frac12int_Omegamathbf A_perp^2 f mathrmdxmathrmdpmathrmdmathbf s\n + frac12int_Omega_x mathbf E^2 + fracpartial mathbf A_perppartial x^2 mathrmdx + int_Omega left( - s_2 fracpartial A_zpartial x + s_3 fracpartial A_ypartial x right) f mathrmdxmathrmdpmathrmdmathbf s\nendaligned\nendequation ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"the reduced spin Vlasov-Maxwell system of equations (\\ref{eq:reduced}) is equivalent to fracpartial mathcalZpartial t =  mathcalZ mathcalH ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/#GEMPIC-framework-applied-to-reduced-spin-Vlasov-system.","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"GEMPIC framework applied to reduced spin Vlasov system.","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"We consider the components of the electromagnetic fields separately and we have that E_x is a 1-form, E_y E_z A_y A_z are 0-forms. There is a commuting diagram for involved function spaces in one spatial dimension with continuous spaces in the upper line and discrete subspaces in the lower line. The connection between the two sequences is made by the projectors Pi_0 and Pi_1.","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginxy\n xymatrix\n    H^m+1 arrr^fracmathrmdmathrmd xard_Pi_0   H^m ard^Pi_1 \n      V_0  arrr^fracmathrmdmathrmd x  V_1\n    \nendxy","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"(Image: )","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"The basis for each of the finite dimensional spaces V_0 V_1, with dim V_k = N_k is denoted by  Lambda^0_I_I=1cdotsN_0  and  Lambda^1_I_I=1cdotsN_1  The dual bases of V_0 and V_1 are Sigma^0_I_I=1cdots N_0  and Sigma^1_I_I=1cdots N_1  respectively ie  int_Omega_x Sigma^k_I Lambda^k_J mathrmdx = delta_IJ k = 0 1. fracmathrmdmathrmd x is a linear operator, i.e., ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"fracmathrmdmathrmd x V_0 rightarrow V_1","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"Operator fracmathrmdmathrmd x can be expressed by a matrix mathbbC:","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"fracmathrmdmathrmd x left(Lambda^0_1 cdots Lambda^0_N_0 right)  = left(Lambda^1_1 cdots Lambda^1_N_1 right) mathbbC_N_1 N_0","category":"page"},{"location":"scalar_spin_vlasov_maxwell/#B-splines","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"B-splines","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"Assume Omega_x = 0 L, and there is one equidistant grid on Omega_x,","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"x_j = (j-1)Delta x Delta x = LM j = 1 cdots M","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"We can choose the following Lambda^0_I_I=1cdotsN_0, and Lambda^1_I_I=1cdots N_1 as the basis functions for V_0, and V_1 respectively.","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginalign\nLambda^0_j = N_j^3(x) = frac16 left \nbeginaligned\nleft(2 - fracx - x_j+2Delta x right)^3 quad 1 le fracx-x_j+2Delta x le 2\n4 - 6 left(fracx-x_j+2Delta xright)^2 + 3 left( fracx-x_j+2Delta xright)^3 quad 0 le fracx-x_j+2Delta x le 1\n0 quad textotherwise\nendaligned\nright\nendalign","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginalign\nLambda^1_j = N_j^2(x) = frac12 left \nbeginaligned\nleft(fracx - x_jDelta x right)^2 quad 0 le fracx-x_jDelta x le 1\n - 2 left(fracx-x_jDelta xright)^2 + 6 left( fracx-x_jDelta xright) - 3 quad 1 le fracx-x_jDelta x le 2\n (3 - fracx-x_jDelta x)^2 quad 2 le fracx-x_jDelta x le 3\n0 quad textotherwise\nendaligned\nright\nendalign","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"There is one relation between Lambda^k k = 0 1,","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"fracmathrmdmathrmdx N^3_j(x) = frac1Delta xleft(N^2_j(x) - N^2_j+1(x)  right)","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"which gives ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nmathbbC = frac1Delta x\nbeginaligned\nleft(\nbeginmatrix\n     1   0   0  0 cdots  0  -1\n     -1  1  0  0 cdots  0  0\n     0   -1  1  0 cdots 0  0\n     0   0   ddots ddots ddots  vdots  vdots\n      vdots  vdots  ddots  ddots  ddots ddots  vdots\n     vdots  vdots  vdots  ddots  ddots ddots 0\n     0  0  0  cdots  0 -1  1\nendmatrix\nright)\nendaligned\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/#Notations","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"Notations","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"Before deriving the discretization of functional derivatives, we introduce several notations which will make the formulas simpler.","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginalign\nbeginaligned\n mathbbR^k(mathbfX)_N_p N_k = \nleft(\nbeginmatrix\n     Lambda^k_1(x_1)   cdots   Lambda^k_N_k(x_1) \n     Lambda^k_1(x_2)   cdots   Lambda^k_N_k(x_2) \n      vdots   vdots   vdots \n       Lambda^k_1(x_N_p)   cdots   Lambda^k_N_k(x_N_p)\n      endmatrix\nright) k = 0 1\nmathbbM^k(mathbfX)_N_k N_k = \nleft(\nbeginmatrix\n     int Lambda^k_1(x)Lambda^k_1(x)mathrmdx   cdots   int Lambda^k_1(x)Lambda^k_N_k(x)mathrmdx \n     int Lambda^k_2(x)Lambda^k_1(x)mathrmdx   cdots   int Lambda^k_2(x)Lambda^k_N_k(x)mathrmdx \n      vdots   vdots   vdots \n      int Lambda^k_N_k(x)Lambda^k_1(x)mathrmdx   cdots   int Lambda^k_N_k(x)Lambda^k_N_k(x)mathrmdx\n      endmatrix\nright) k = 0 1\nmathbbN^k(x_a)_N_k N_k = \nleft(\nbeginmatrix\n      Lambda^k_1(x_a)Lambda^k_1(x_a)   cdots   Lambda^k_1(x_a)Lambda^k_N_k(x_a) \n      Lambda^k_2(x_a)Lambda^k_1(x_a)   cdots    Lambda^k_2(x_a)Lambda^k_N_k(x_a) \n      vdots   vdots   vdots \n       Lambda^k_N_k(x_a)Lambda^k_1(x_a)   cdots    Lambda^k_N_k(x_a)Lambda^k_N_k(x_a)\n      endmatrix\nright) k = 0 1\nmathbbM_p N_p N_p = \ntextdiag(omega_1 cdots omega_N_p) mathbbS_3N_p 3N_p = textdiag(mathbbS_1 cdots mathbbS_N_p)\nmathbbS_a = frac1omega_a\nleft(\nbeginmatrix\n     0  s_a3   -s_a2 \n      -s_a3   0   s_a1 \n      s_a2   -s_a1   0 \n      endmatrix\nright) \nLambda^k(x_a) = (Lambda^k_1(x_a) cdots Lambda^k_N_k(x_a))^mathrmT k = 1 2\nmathbfX = (x_1 cdots x_N_p)^mathrmT\nmathbfP = (p_1 cdots p_N_p)^mathrmT\nmathbfS = (s_11 s_12 s_13 cdots s_a1 s_a2 s_a3 cdots s_N_p1 s_N_p2 s_N_p3)^mathrmT\nmathbfS_1 = (s_11 cdots s_a1 cdots s_N_p1)^mathrmT\nmathbfS_2 = (s_12 cdots s_a2 cdots s_N_p2)^mathrmT\nmathbfS_3 = (s_13 cdots s_a3 cdots s_N_p3)^mathrmT\nmathbfe_x = (e_x1 cdots e_xN_1)^mathrmT\nmathbfe_y = (e_y1 cdots e_yN_0)^mathrmT\nmathbfe_z = (e_z1 cdots e_zN_0)^mathrmT\nmathbfa_y = (a_y1 cdots a_yN_0)^mathrmT\nmathbfa_z = (a_z1 cdots a_zN_0)^mathrmT\nendaligned\nendalign","category":"page"},{"location":"scalar_spin_vlasov_maxwell/#Discretization-of-the-functional-derivatives","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"Discretization of the functional derivatives","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"As E_x h = sum_I=1^N_1e_xILambda_I^1(x), any functional mathcalFE_xh can be considered as a function F(mathbf e_x) of the finite element coefficients, ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"mathcalFE_xh = F(mathbfe_x)","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"From [2], we know that ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nfracdelta mathcalFE_xhdelta E_x = sum_I=1^N_1 fracpartial F (mathbf e_x)partial e_xISigma_I^1(x) = sum_IJ=1^N_1fracpartial F (mathbf e_x)partial e_xI (mathbbM_1)^-1_IJLambda_J^1(x)\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"Similarly, we have","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\nfracdelta mathcalFE_yhdelta E_y = sum_I=1^N_0 fracpartial F (mathbf e_y)partial e_yISigma_I^0(x) = sum_IJ=1^N_0fracpartial F (mathbf e_y)partial e_yI (mathbbM_0)^-1_IJLambda_J^0(x)\nfracdelta mathcalFE_zhdelta E_z = sum_I=1^N_0 fracpartial F (mathbf e_z)partial e_zISigma_I^0(x) = sum_IJ=1^N_0fracpartial F (mathbf e_z)partial e_zI (mathbbM_0)^-1_IJLambda_J^0(x)fracdelta mathcalFA_yhdelta A_y = sum_I=1^N_0 fracpartial F (mathbf a_y)partial a_yISigma_I^0(x) = sum_IJ=1^N_0fracpartial F (mathbf a_y)partial a_yI (mathbbM_0)^-1_IJLambda_J^0(x)\nfracdelta mathcalFA_zhdelta A_z = sum_I=1^N_0 fracpartial F (mathbf a_z)partial a_zISigma_I^0(x) = sum_IJ=1^N_0fracpartial F (mathbf a_z)partial a_zI (mathbbM_0)^-1_IJLambda_J^0(x)\nendaligned\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"We assume a particle-like distribution function for N_p particles labelled by  a, ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"f_h(xpmathbf s t) = sum_a=1^N_pomega_a delta(x-x_a(t))delta(p-p_a(t))delta(mathbf s-mathbf s_a(t))","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"One functional of the distribution function, mathcalFf can be considered as a function of the particle phase space trajectories, F(mathbfX mathbfP mathbfS). From [2], we know that ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"fracpartial Fpartial x_a = omega_a fracpartialpartial xfracdelta mathcalFdelta f_(x_a p_a mathbf s_a) fracpartial Fpartial p_a = omega_a fracpartialpartial pfracdelta mathcalFdelta f_(x_a p_a mathbf s_a) fracpartial Fpartial mathbf s_a = omega_a fracpartialpartial mathbf s_afracdelta mathcalFdelta f_(x_a p_a mathbf s_a)","category":"page"},{"location":"scalar_spin_vlasov_maxwell/#Discrete-Poisson-bracket","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"Discrete Poisson bracket","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"Substituting the variational derivatives in last subsection into (\\ref{eq:poisson}) gives the following discrete Poisson bracket,","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequationlabeleqdis\n F G  = left( nabla_mathbf uFright)^mathrmT mathbbJ(mathbf u)nabla_mathbf uG\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"where mathbf u = (mathbf X mathbf P mathbf S mathbf e_x mathbf e_y mathbf e_z mathbf a_y mathbf a_z)^mathrmT. The matrix mathbbJ is","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginalignlabeleqdispoisson\nbeginaligned\n mathbbJ(mathbfu) = \nleft(\nbeginmatrix\n    mathbf0  mathbbM_p^-1  mathbf0  mathbf0  mathbf0  mathbf0 mathbf0   mathbf0\n     -mathbbM_p^-1  mathbf0    mathbf0  mathbbR^1(mathbf X)mathbbM_1^-1  mathbf0  mathbf0  mathbf0  mathbf0\n      mathbf0   mathbf0   mathbbS  mathbf0  mathbf0  mathbf0  mathbf0  mathbf0 \n       mathbf0   -mathbbM_1^-1mathbbR^1(mathbfX)^mathrmT   mathbf0  mathbf0 mathbf0 mathbf0 mathbf0 mathbf0\n       mathbf0 mathbf0 mathbf0 mathbf0 mathbf0 mathbf0mathbbM_0^-1mathbf0\n       mathbf0mathbf0mathbf0mathbf0mathbf0mathbf0mathbf0 mathbbM_0^-1\n       mathbf0mathbf0mathbf0mathbf0-mathbbM_0^-1mathbf0mathbf0mathbf0\n       mathbf0mathbf0mathbf0mathbf0mathbf0-mathbbM_0^-1mathbf0mathbf0\n      endmatrix\nright)\nendaligned\nendalign","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"The above bracket (\\ref{eq:dis})-(\\ref{eq:dispoisson}) is a Poisson bracket.","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"From the definition of Poisson bracket, we only need to verify the following identity,","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequationlabeleqjacobi\nsum_lleft( fracpartial mathbbJ_ij(mathbf u)partial u_lmathbbJ_lk +  fracpartial mathbbJ_jk(mathbf u)partial u_lmathbbJ_li +  fracpartial mathbbJ_ki(mathbf u)partial u_lmathbbJ_ljright) = 0 textfor all   i j k \nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"As the Poisson matrix mathbbJ depends only on mathbf X, we only need to sum l over 1 le l le N_p. It is easy to check that we only need to consider the cases that two of ijk in mathbbZ lie in N_p+1 2N_p, and the other one lies in 5N_p+1  5N_p+N_1. We take the case that  N_p+1 le ij le 2N_p and 5N_p+1 le k le 5N_p+N_1 for example. In this case, Eq.(\\ref{eq:jacobi}) becomes ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"sum_l=1^N_pleft(  fracpartial mathbbJ_jk(mathbf u)partial u_lmathbbJ_li +  fracpartial mathbbJ_ki(mathbf u)partial u_lmathbbJ_ljright) = 0","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"As $ \\mathbb{J}{jk}$ in the above depends only on x{j-Np}$, $ \\mathbb{J}{ki}$ depends only on x_i-N_p, the left hand side of the above identity becomes ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequationlabeleqfinal\n fracpartial mathbbJ_jk(mathbf u)partial u_j-N_pmathbbJ_(j-N_p)i +  fracpartial mathbbJ_ki(mathbf u)partial u_i-N_pmathbbJ_(i-N_p)j\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"When ineq j, mathbbJ_(j-N_p)i  = 0, and mathbbJ_(i-N_p)j = 0, then Eq.(\\ref{eq:final}) is zero. When i = j, we have mathbbJ_(j-N_p)i  =  mathbbJ_(i-N_p)j   and  fracpartial mathbbJ_jk(mathbf u)partial u_j-N_p = -fracpartial mathbbJ_ki(mathbf u)partial u_i-N_p, then Eq.(\\ref{eq:final}) is also zero. Then the proof is finished.","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"Discrete Hamiltonian is ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\nH(mathbf u) = frac12int p^2 sum_a=1^N_p omega_a delta(x-x_a) delta(p-p_a) delta(mathbf s-mathbf s_a) mathrmdxmathrmdpmathrmdmathbf s\n+frac12int sum_a=1^N_pleft( sum_I=1^N_pa_yILambda^0_I(x)^2  + sum_I=1^N_pa_zILambda^0_I(x)^2 right)omega_a delta(x-x_a)delta(p-p_a)delta(mathbf s-mathbf s_a) mathrmdx mathrmdp mathrmdmathbf s\n+ frac12int sum_I=1^N_1e_xILambda^1_I(x)^2  mathrmdx+frac12int left(sum_I=1^N_0e_yILambda^0_I(x)^2+ sum_I=1^N_0e_zILambda^0_I(x)^2right)  mathrmdx\n+frac12int  fracmathrmdmathrmdx  sum_a=1^N_0 a_yILambda^0_I(x)^2 mathrmdx+frac12int  fracmathrmdmathrmdx  sum_a=1^N_0 a_zILambda^0_I(x)^2 mathrmdx\n+int sum_a=1^N_pleft(s_2 fracmathrmdmathrmdx sum_I=1^N_0a_zILambda^0_I(x)  - s_3  fracmathrmdmathrmdx  sum_I=1^N_0a_yILambda^0_I(x)right)omega_a delta(x-x_a)delta(p-p_a) delta(mathbf s-mathbf s_a)mathrmdxmathrmdpmathrmdmathbf s\nendaligned\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"which in matrix form becomes","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\nH= frac12mathbf P^mathrmTmathbbM_pmathbf P + frac12sum_a=1^N_pomega_amathbf a_y^mathrmTmathbbN^0(x_a)mathbf a_y + frac12sum_a=1^N_pomega_amathbf a_z^mathrmTmathbbN^0(x_a)mathbf a_z \n + frac12mathbf e_x^mathrmTmathbbM_1mathbf e_x +frac12mathbf e_y^mathrmTmathbbM_0mathbf e_y +  frac12mathbf e_z^mathrmTmathbbM_0mathbf e_z +  frac12mathbf a_y^mathrmT mathbbC^mathrmTmathbbM_1mathbbCmathbf a_y+  frac12mathbf a_z^mathrmT mathbbC^mathrmTmathbbM_1mathbbCmathbf a_z\n+ mathbf a_z^mathrmTmathbbC^mathrmTmathbbR^1(mathbf X)^mathrmTmathbbM_pmathbf S_2 - mathbf a_y^mathrmTmathbbC^mathrmTmathbbR^1(mathbf X)^mathrmTmathbbM_pmathbf S_3\nendaligned\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/#Hamiltonian-splitting-methods","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"Hamiltonian splitting methods","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/#.-The-subsystem-corresponding-to-H_p-\\frac{1}{2}{\\mathbf-P}{\\mathrm{T}}\\mathbb{M}_p{\\mathbf-P}-is","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"1. The subsystem corresponding to H_p = frac12mathbf P^mathrmTmathbbM_pmathbf P is","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\ndotmathbf X = mathbf P\ndotmathbf P = mathbf 0\ndotmathbf S = mathbf 0\ndotmathbf e_x = -mathbbM_1^-1mathbbR^1(mathbf X)^mathrmTmathbbM_pmathbf P\ndotmathbf e_y = mathbf 0\ndotmathbf e_z = mathbf 0\ndotmathbf a_y = mathbf 0\ndotmathbf a_z = mathbf 0\nendaligned\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"For this subsystem, we only need to compute $ {\\mathbf X}, {\\mathbf{e}}_x$.","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\nmathbf X(t) = mathbf X(0) + t mathbf P(0)\nmathbbM_1mathbfe_x(t) = mathbbM_1mathbfe_x(0) - int_0^t mathbbR^1(mathbf X(tau))^mathrmTmathbbM_pmathbf Pmathrmdtau\nendaligned\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/#.-The-subsystem-corresponding-to-H_A-is","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"2. The subsystem corresponding to H_A is","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"H_A = frac12sum_a=1^N_pomega_amathbf a_y^mathrmTmathbbN^0(x_a)mathbf a_y + sum_a=1^N_pomega_amathbf a_z^mathrmTmathbbN^0(x_a)mathbf a_z + frac12mathbf a_y^mathrmTmathbbC^mathrmTmathbbM_1mathbbCmathbf a_y\n+ frac12mathbf a_z^mathrmTmathbbC^mathrmTmathbbM_1mathbbCmathbf a_z","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\ndotmathbf X = mathbf 0\ndotmathbf P  = mathbbM_p^-1fracpartial H_Apartial mathbf X\ndotmathbf S = mathbf  0\ndotmathbf e_x = mathbf 0\ndotmathbf e_y = mathbbM_0^-1left(sum_a=1^N_pomega_amathbbN^0(x_a)mathbf a_y + mathbbC^mathrmTmathbbM_1mathbbCmathbf a_y  right)\ndotmathbf e_z = mathbbM_0^-1left(sum_a=1^N_pomega_amathbbN^0(x_a)mathbf a_z + mathbbC^mathrmTmathbbM_1mathbbCmathbf a_z  right)\ndotmathbf a_y=  mathbf 0\ndotmathbf a_z=  mathbf 0\nendaligned\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"In this subsystem, mathbf X mathbf S mathbf e_x mathbf a_y mathbf a_z stay unchanged along the time. As for mathbf P, we have ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\np_a(t) = p_a(0) + t frac1omega_aleft( frac12omega_a mathbf a_y^mathrmTfracpartial partial x_amathbbN^0(x_a)mathbf a_y  + frac12omega_a mathbf a_z^mathrmTfracpartial partial x_amathbbN^0(x_a)mathbf a_zright)\n= p_a(0) + t left( frac12 mathbf a_y^mathrmTfracpartial partial x_amathbbN^0(x_a)mathbf a_y  + frac12 mathbf a_z^mathrmTfracpartial partial x_amathbbN^0(x_a)mathbf a_zright)\n = p_a(0) + fract2   mathbf a_y^mathrmT(fracpartialpartial x_aLambda^0(x_a) Lambda^0(x_a)^mathrmT  + Lambda^0(x_a) fracpartialpartial x_aLambda^0(x_a)^mathrmT  )mathbf a_y\n+ fract2 mathbf a_z^mathrmT(fracpartialpartial x_aLambda^0(x_a) Lambda^0(x_a)^mathrmT  + Lambda^0(x_a) fracpartialpartial x_aLambda^0(x_a)^mathrmT  )mathbf a_z\nendaligned\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\nmathbbM_0mathbf e_y(t) = mathbbM_0mathbf e_y(0)  + tleft(sum_a=1^N_pomega_amathbbN^0(x_a)mathbf a_y + mathbbC^mathrmTmathbbM_1mathbbCmathbf a_y  right)\n = mathbbM_0mathbf e_y(0)  + tleft(sum_a=1^N_pomega_aLambda^0(x_a)Lambda^0(x_a)^mathrmTmathbf a_y + mathbbC^mathrmTmathbbM_1mathbbCmathbf a_y  right)\nendaligned\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\nmathbbM_0mathbf e_z(t) = mathbbM_0mathbf e_z(0)  + tleft(sum_a=1^N_pomega_amathbbN^0(x_a)mathbf a_z + mathbbC^mathrmTmathbbM_1mathbbCmathbf a_z  right)\n = mathbbM_0mathbf e_z(0)  + tleft(sum_a=1^N_pomega_aLambda^0(x_a)Lambda^0(x_a)^mathrmTmathbf a_z + mathbbC^mathrmTmathbbM_1mathbbCmathbf a_z  right)\nendaligned\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"Note that in the above, we use the identity ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"mathbbN^0(x_a) = Lambda^0(x_a) Lambda^0(x_a)^mathrmT","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"and ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"fracmathrmdmathrmdxmathbbN^0(x_a)  =  fracpartialpartial x_aLambda^0(x_a) Lambda^0(x_a)^mathrmT  + Lambda^0(x_a) fracpartialpartial x_aLambda^0(x_a)^mathrmT","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"which reduces the computational cost.","category":"page"},{"location":"scalar_spin_vlasov_maxwell/#.-The-subsystem-corresponding-to","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"3. The subsystem corresponding to","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"H_s = mathbf a_z^mathrmTmathbbC^mathrmTmathbbR^1(mathbfX)^mathrmTmathbbM_p mathbf S_2 -mathbf a_y^mathrmTmathbbC^mathrmTmathbbR^1(mathbfX)^mathrmTmathbbM_p mathbf S_3","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"is","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\ndotmathbfX = mathbf 0\ndotmathbf P = -mathbbM_p^-1fracpartial H_spartial mathbf X\ndotmathbf S = mathbbSfracpartial H_spartial mathbf S\ndotmathbf e_x = mathbf 0\ndotmathbf e_y = - mathbbM_0^-1mathbbC^mathrmTmathbbR^1(mathbf X)^mathrmTmathbbM_pmathbfS_3\ndotmathbf e_z = mathbbM_0^-1mathbbC^mathrmTmathbbR^1(mathbf X)^mathrmTmathbbM_pmathbfS_2\ndota_y = mathbf 0\ndota_z = mathbf 0\nendaligned\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"For this subsystem, we firstly solve dotmathbf S = mathbbSfracpartial H_spartial mathbf S. For each particle, we have","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginalign\nbeginaligned\ndots_a = \n left(\nbeginmatrix\n    dots_a1  \n    dots_a2  \n      dots_a3  \n      endmatrix\nright) = \nleft(\nbeginmatrix\n    0  Y Z \n    -Y   0   0 \n      -Z  0 0 \n      endmatrix\nright)\n left(\nbeginmatrix\n    s_a1  \n    s_a2  \n     s_a3  \n      endmatrix\nright) = hatv mathbf s_a\nendaligned\nendalign","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"where Y = mathbf a_y^mathrmTmathbbC^mathrmTR^1(x_a), Z = mathbf a_z^mathrmTmathbbC^mathrmTR^1(x_a), R^1(x_a) = (Lambda^1_1(x_a) cdots Lambda^1_N_1(x_a))^mathrmT. Set a vector mathbf v  = (0 Z -Y) in mathbbR^3. Then ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"mathbf s_a(t) = exp(thatv)mathbf s_a(0) = left(I + fracsin(tmathbf v)mathbf vhatv + frac12left( fracsin(fract2mathbf v)fracmathbf v2 right)^2 hatv^2right) mathbf s_a(0)","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"and","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\nint_0^t mathbf s_a(tau)mathrmdtau= int_0^t exp(tau hatv)mathbf s_a(0)mathrmdtau = left(tI - fraccos(tmathbf v)mathbf v^2 hatv + frac1mathbf v^2 hatv  + frac2mathbf v^2 left(fract2-fracsin(tmathbf v)2mathbf vright)hatv^2right) mathbf s_a(0)\nendaligned\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"Then we have ","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\nmathbbM_0 mathbf e_y(t) = mathbbM_0 mathbf e_y(0) - mathbbC^mathrmTmathbbR^1(mathbf X)^mathrmTmathbbM_p int_0^tmathbf s_3(tau)dtau\nmathbbM_0 mathbf e_z(t) = mathbbM_0 mathbf e_z(0) + mathbbC^mathrmTmathbbR^1(mathbf X)^mathrmTmathbbM_p int_0^tmathbf s_2(tau)dtau\nendaligned\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"and","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\np_a(t) = p_a(0) - mathbf a_z^mathrmTmathbbC^mathrmTfracpartial R^1(x_a)partial x_aint_0^t s_a2(tau)mathrmdtau +  mathbf a_y^mathrmTmathbbC^mathrmTfracpartial R^1(x_a)partial x_aint_0^t s_a3(tau)mathrmdtau\nendaligned\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/#.-The-subsystem-corresponding-to-2","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"4. The subsystem corresponding to","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"H_E = frac12mathbf e_x^mathrmTmathbbM_1mathbf e_x + frac12mathbf e_y^mathrmTmathbbM_0mathbf e_y + frac12mathbf e_z^mathrmTmathbbM_0mathbf e_z","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"is,","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nbeginaligned\ndotmathbf X = mathbf 0\ndotmathbf P = mathbbR^1(mathbf X)mathbf e_x\ndotmathbf S = mathbf 0\ndotmathbf e_x = mathbf 0\ndotmathbf e_y = mathbf 0\ndotmathbf e_z = mathbf 0\ndotmathbf a_y = -mathbf e_y\ndotmathbf a_z = -mathbf e_z\nendaligned\nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"We only need to solve the equation about mathbf P,","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"beginequation\nmathbf P(t) = mathbf P(0) + t mathbbR^1(mathbf X)mathbf e_x \nendequation","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"Vlasov–Maxwell equations for laser-plasma interaction[6].","category":"page"},{"location":"scalar_spin_vlasov_maxwell/#References","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"References","text":"","category":"section"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"[1]: Marklund M , Morrison P J. (2011) \"Gauge-free Hamiltonian structure of the spin Maxwell-Vlasov equations,\" Physics Letters A, 375(24):2362-2365.","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"[2]: Kraus M , Kormann K , Morrison P , et al. (2017) \"GEMPIC: geometric electromagnetic particle-in-cell methods,\" Journal of Plasma Physics, 83(04):905830401.","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"[3]: E. Hairer, C. Lubich, and G.Wanner. (2002) \"Geometric Numerical Integration: Structure-Preserving Algorithms for Ordinary Differential Equations\" (Springer, New York).","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"[4]: Crouseilles N , Einkemmer L , Faou E. (2015) \"Hamiltonian splitting for the Vlasov-Maxwell equations\". Journal of Computational Physics, 283:224-240.","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"[5]: Huot F, Ghizzo A, Bertrand P, et al. (2003) \"Instability of the time splitting scheme for the one-dimensional and relativistic Vlasov–Maxwell system,\" Journal of Computational Physics, 185(2): 512-531.","category":"page"},{"location":"scalar_spin_vlasov_maxwell/","page":"One Reduced Scalar Spin Vlasov-Maxwell","title":"One Reduced Scalar Spin Vlasov-Maxwell","text":"[6]: Li Y, Sun Y, Crouseilles N. (2019) \"Numerical simulations of one laser-plasma model based on Poisson structure,\" Journal of Computational Physics, 109172.","category":"page"},{"location":"hamiltonian_splitting/#Hamiltonian-splitting","page":"Hamiltonian splitting","title":"Hamiltonian splitting","text":"","category":"section"},{"location":"hamiltonian_splitting/","page":"Hamiltonian splitting","title":"Hamiltonian splitting","text":"Modules = [GEMPIC]\nPages   = [\"hamiltonian_splitting.jl\"]","category":"page"},{"location":"hamiltonian_splitting/#GEMPIC.HamiltonianSplitting","page":"Hamiltonian splitting","title":"GEMPIC.HamiltonianSplitting","text":"HamiltonianSplitting( maxwell_solver,\n                      kernel_smoother_0, kernel_smoother_1,\n                      particle_group, e_dofs, b_dofs)\n\nHamiltonian splitting type for Vlasov-Maxwell\n\nIntegral over the spline function on each interval (order p+1)\nIntegral over the spline function on each interval (order p)\ne_dofs describing the two components of the electric field\nb_dofs describing the magnetic field\nj_dofs for kernel representation of current density. \n\n\n\n\n\n","category":"type"},{"location":"hamiltonian_splitting/#GEMPIC.lie_splitting!-Tuple{HamiltonianSplitting, Float64, Int64}","page":"Hamiltonian splitting","title":"GEMPIC.lie_splitting!","text":"lie_splitting( h, dt, number_steps)\n\nLie splitting\n\n\n\n\n\n","category":"method"},{"location":"hamiltonian_splitting/#GEMPIC.lie_splitting_back!-Tuple{HamiltonianSplitting, Float64, Int64}","page":"Hamiltonian splitting","title":"GEMPIC.lie_splitting_back!","text":"lie_splitting_back(h, dt, number_steps)\n\nLie splitting (oposite ordering)\n\n\n\n\n\n","category":"method"},{"location":"hamiltonian_splitting/#GEMPIC.strang_splitting!-Tuple{HamiltonianSplitting, Float64, Int64}","page":"Hamiltonian splitting","title":"GEMPIC.strang_splitting!","text":"strang_splitting( h, dt, number_steps)\n\nStrang splitting\n\ntime splitting object \ntime step\nnumber of time steps\n\n\n\n\n\n","category":"method"},{"location":"particle_group/#Particle-group","page":"Particle group","title":"Particle group","text":"","category":"section"},{"location":"particle_group/","page":"Particle group","title":"Particle group","text":"Modules = [GEMPIC]\nPages   = [\"particle_group.jl\"]","category":"page"},{"location":"particle_group/#GEMPIC.ParticleGroup","page":"Particle group","title":"GEMPIC.ParticleGroup","text":"ParticleGroup{D,V}( n_particles, charge, mass, q, weights)\n\nn_particles : number of particles \ncharge      : charge of the particle species\nmass        : mass of the particle species\nn_weights   : number of differents weights\n\n\n\n\n\n","category":"type"},{"location":"particle_group/#GEMPIC.get_charge-Union{Tuple{V}, Tuple{D}, Tuple{ParticleGroup{D, V}, Int64}} where {D, V}","page":"Particle group","title":"GEMPIC.get_charge","text":"get_charge( p, i; i_wi=1)\n\nGet charge of ith particle of p (q * particle_weight)\n\n\n\n\n\n","category":"method"},{"location":"particle_group/#GEMPIC.get_mass-Union{Tuple{V}, Tuple{D}, Tuple{ParticleGroup{D, V}, Int64}} where {D, V}","page":"Particle group","title":"GEMPIC.get_mass","text":"get_mass( p, i; i_wi=1)\n\nGet mass of ith particle of p (m * particle_weight)\n\n\n\n\n\n","category":"method"},{"location":"particle_group/#GEMPIC.get_spin-Union{Tuple{V}, Tuple{D}, Tuple{ParticleGroup{D, V}, Int64, Int64}} where {D, V}","page":"Particle group","title":"GEMPIC.get_spin","text":"get_spin( p, i, j)\n\nGet the jth weight of the ith particle weights of group p\n\n\n\n\n\n","category":"method"},{"location":"particle_group/#GEMPIC.get_v-Union{Tuple{V}, Tuple{D}, Tuple{ParticleGroup{D, V}, Int64}} where {D, V}","page":"Particle group","title":"GEMPIC.get_v","text":"get_v( p, i )\n\nGet velocity of ith particle of p\n\n\n\n\n\n","category":"method"},{"location":"particle_group/#GEMPIC.get_weights-Union{Tuple{V}, Tuple{D}, Tuple{ParticleGroup{D, V}, Int64}} where {D, V}","page":"Particle group","title":"GEMPIC.get_weights","text":"get_weights( p, i)\n\nGet ith particle weights of group p\n\n\n\n\n\n","category":"method"},{"location":"particle_group/#GEMPIC.get_x-Union{Tuple{V}, Tuple{D}, Tuple{ParticleGroup{D, V}, Int64}} where {D, V}","page":"Particle group","title":"GEMPIC.get_x","text":"get_x( p, i )\n\nGet position of ith particle of p\n\n\n\n\n\n","category":"method"},{"location":"particle_group/#GEMPIC.set_spin!-Union{Tuple{V}, Tuple{D}, Tuple{ParticleGroup{D, V}, Int64, Int64, Any}} where {D, V}","page":"Particle group","title":"GEMPIC.set_spin!","text":"set_spin!( p, i, j)\n\nSet the jth weight of the ith particle weights of group p\n\n\n\n\n\n","category":"method"},{"location":"particle_group/#GEMPIC.set_v!-Union{Tuple{V}, Tuple{D}, Tuple{ParticleGroup{D, V}, Int64, Float64}} where {D, V}","page":"Particle group","title":"GEMPIC.set_v!","text":"set_v!( p, i, v)\n\nSet velocity of ith particle of p to v\n\n\n\n\n\n","category":"method"},{"location":"particle_group/#GEMPIC.set_v!-Union{Tuple{V}, Tuple{D}, Tuple{ParticleGroup{D, V}, Int64, Vector{Float64}}} where {D, V}","page":"Particle group","title":"GEMPIC.set_v!","text":"set_v!( p, i, v)\n\nSet velocity of ith particle of p to v\n\n\n\n\n\n","category":"method"},{"location":"particle_group/#GEMPIC.set_weights!-Union{Tuple{V}, Tuple{D}, Tuple{ParticleGroup{D, V}, Int64, Float64}} where {D, V}","page":"Particle group","title":"GEMPIC.set_weights!","text":"set_weights!( p, i, w)\n\nSet weights of particle @ i\n\n\n\n\n\n","category":"method"},{"location":"particle_group/#GEMPIC.set_weights!-Union{Tuple{V}, Tuple{D}, Tuple{ParticleGroup{D, V}, Int64, Vector{Float64}}} where {D, V}","page":"Particle group","title":"GEMPIC.set_weights!","text":"set_weights!( p, i, w)\n\nSet weights of ith particle of p to w\n\n\n\n\n\n","category":"method"},{"location":"particle_group/#GEMPIC.set_x!-Union{Tuple{V}, Tuple{D}, Tuple{ParticleGroup{D, V}, Int64, Float64}} where {D, V}","page":"Particle group","title":"GEMPIC.set_x!","text":"set_x!( p, i, x)\n\nSet position of ith particle of p to x\n\nnote: Note\nif x is a scalar value, only the first x dimension will be set.\n\n\n\n\n\n","category":"method"},{"location":"particle_group/#GEMPIC.set_x!-Union{Tuple{V}, Tuple{D}, Tuple{ParticleGroup{D, V}, Int64, Vector{Float64}}} where {D, V}","page":"Particle group","title":"GEMPIC.set_x!","text":"set_x!( p, i, x )\n\nSet position of ith particle of p to x \n\n\n\n\n\n","category":"method"},{"location":"hamiltonian_splitting_boris/#Hamiltonian-splitting-Boris","page":"Hamiltonian splitting Boris","title":"Hamiltonian splitting Boris","text":"","category":"section"},{"location":"hamiltonian_splitting_boris/","page":"Hamiltonian splitting Boris","title":"Hamiltonian splitting Boris","text":"Modules = [GEMPIC]\nPages   = [\"hamiltonian_splitting_boris.jl\"]","category":"page"},{"location":"hamiltonian_splitting_boris/#GEMPIC.HamiltonianSplittingBoris","page":"Hamiltonian splitting Boris","title":"GEMPIC.HamiltonianSplittingBoris","text":"HamiltonianSplittingBoris( maxwell_solver,\n                           kernel_smoother_0, kernel_smoother_1,\n                           particle_group,\n                           e_dofs_1, e_dofs_2, b_dofs)\n\nBoris pusher in GEMPIC framework (spline finite elements)\n\nmid describing the magnetic field at time t_n+12 (used for push)\nj_dofs for kernel representation of current density. \nmaxwell_solver    : Maxwell solver\nkernel_smoother_0 : Kernel smoother\nkernel_smoother_1 : Kernel smoother\nparticle_group    : Particle group\nefield_dofs       : array for the coefficients of the efields \nbfield_dofs       : array for the coefficients of the bfield\nx_min             : Lower bound of x domain\nLx                : Length of the domain in x direction.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonian_splitting_boris/#GEMPIC.push_v_bpart!-Tuple{HamiltonianSplittingBoris, Float64}","page":"Hamiltonian splitting Boris","title":"GEMPIC.push_v_bpart!","text":"push_v_bpart!(splitting, dt)\n\nPusher for vxB part\n\n\n\n\n\n","category":"method"},{"location":"hamiltonian_splitting_boris/#GEMPIC.push_v_epart!-Tuple{Any, Any}","page":"Hamiltonian splitting Boris","title":"GEMPIC.push_v_epart!","text":"push_v_epart(splitting, dt)\n\nPusher for E nabla_v part\n\nV_new = V_old + dt  E\n\n\n\n\n\n","category":"method"},{"location":"hamiltonian_splitting_boris/#GEMPIC.push_x_accumulate_j!-Tuple{Any, Any}","page":"Hamiltonian splitting Boris","title":"GEMPIC.push_x_accumulate_j!","text":"push_x_accumulate_j!(splitting, dt)\n\nPusher for x and accumulate current densities\n\nFor each particle compute the index of the first DoF on the grid it  contributes to and its position (normalized to cell size one). \n\nThen update particle position:  X_new = X_old + dt  V\n\nnote: Note\nj_dofs does not hold the values for j itself but  for the integrated j.\n\n\n\n\n\n","category":"method"},{"location":"hamiltonian_splitting_boris/#GEMPIC.staggering!-Tuple{Any, Any}","page":"Hamiltonian splitting Boris","title":"GEMPIC.staggering!","text":"staggering(splitting, dt)\n\nPropagate E_0 to E_12 and x_0 to x_12 to initialize  the staggering\n\nsplitting : time splitting object \ndt   : time step\n\n\n\n\n\n","category":"method"},{"location":"hamiltonian_splitting_boris/#GEMPIC.strang_splitting!-Tuple{HamiltonianSplittingBoris, Float64, Int64}","page":"Hamiltonian splitting Boris","title":"GEMPIC.strang_splitting!","text":"strang_splitting(splitting, dt, number_steps)\n\nSecond order Boris pusher using staggered grid\n\nsplitting : time splitting object \ndt   : time step\nnumber_steps : number of time steps\n\n\n\n\n\n","category":"method"},{"location":"#GEMPIC.jl-Documentation","page":"GEMPIC.jl Documentation","title":"GEMPIC.jl Documentation","text":"","category":"section"},{"location":"","page":"GEMPIC.jl Documentation","title":"GEMPIC.jl Documentation","text":"Geometric ElectroMagnetic Particle-In-Cell Methods","category":"page"},{"location":"","page":"GEMPIC.jl Documentation","title":"GEMPIC.jl Documentation","text":"A Julia implementation of the GEMPIC","category":"page"},{"location":"","page":"GEMPIC.jl Documentation","title":"GEMPIC.jl Documentation","text":"This package implements a Finite Element Particle-in-Cell method based on the discretization of the underlying Hamiltonian structure of the Vlasov-Maxwell system. ","category":"page"}]
}
